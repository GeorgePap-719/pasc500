Grammar

    0 $accept: program "EOF"

    1 program: header declarations subprograms comp_statement "."

    2 header: "program" "id" ";"
    3       | error "id" ";"
    4       | "program" error ";"
    5       | "program" "id" error

    6 declarations: constdefs typedefs vardefs

    7 constdefs: "const" constant_defs ";"
    8          | %empty

    9 constant_defs: constant_defs ";" "id" "=" expression
   10              | "id" "=" expression

   11 expression: expression "> or >= or < or <= or <>" expression
   12           | expression "=" expression
   13           | expression "in" expression
   14           | expression "or" expression
   15           | expression "+ or -" expression
   16           | expression "* or / or div or mod or and" expression
   17           | "+ or -" expression
   18           | "not" expression
   19           | variable
   20           | "id" "(" expressions ")"
   21           | constant
   22           | "(" expression ")"
   23           | setexpression

   24 variable: "id"
   25         | variable "." "id"
   26         | variable "[" expressions "]"

   27 expressions: expressions "," expression
   28            | expression

   29 constant: "iconst"
   30         | "rconst"
   31         | "bconst"
   32         | "cconst"

   33 setexpression: "[" elexpressions "]"
   34              | "[" "]"

   35 elexpressions: elexpressions "," elexpression
   36              | elexpression

   37 elexpression: expression ".." expression
   38             | expression

   39 typedefs: "type" type_defs ";"
   40         | %empty

   41 type_defs: type_defs ";" "id" "=" type_def
   42          | "id" "=" type_def

   43 type_def: "array" "[" dims "]" "of" typename
   44         | "set" "of" typename
   45         | "record" fields "end"
   46         | "(" identifiers ")"
   47         | limit ".." limit

   48 dims: dims "," limits
   49     | limits

   50 limits: limit ".." limit
   51       | "id"

   52 limit: "+ or -" "iconst"
   53      | "+ or -" "id"
   54      | "iconst"
   55      | "cconst"
   56      | "bconst"
   57      | "id"

   58 typename: standard_type
   59         | "id"

   60 standard_type: "integer"
   61              | "real"
   62              | "boolean"
   63              | "char"

   64 fields: fields ";" field
   65       | field

   66 field: identifiers ":" typename

   67 identifiers: identifiers "," "id"
   68            | "id"

   69 vardefs: "var" variable_defs ";"
   70        | %empty

   71 variable_defs: variable_defs ";" identifiers ":" typename
   72              | identifiers ":" typename

   73 subprograms: subprograms subprogram ";"
   74            | %empty

   75 subprogram: sub_header ";" "forward"
   76           | sub_header ";" declarations subprograms comp_statement

   77 sub_header: "function" "id" formal_parameters ":" standard_type
   78           | "procedure" "id" formal_parameters
   79           | "function" "id"

   80 formal_parameters: "(" parameter_list ")"
   81                  | %empty

   82 parameter_list: parameter_list ";" pass identifiers ":" typename
   83               | pass identifiers ":" typename

   84 pass: "var"
   85     | %empty

   86 comp_statement: "begin" statements "end"

   87 statements: statements ";" statement
   88           | statement

   89 statement: assignment
   90          | if_statement
   91          | while_statement
   92          | for_statement
   93          | with_statement
   94          | subprogram_call
   95          | io_statement
   96          | comp_statement
   97          | %empty

   98 assignment: variable ":=" expression
   99           | variable ":=" "string"
  100           | error ":=" expression
  101           | variable error expression
  102           | error ":=" "string"
  103           | variable error "string"
  104           | variable ":=" error

  105 if_statement: "if" expression "then" statement if_tail

  106 if_tail: "else" statement
  107        | %empty

  108 while_statement: "while" expression "do" statement

  109 for_statement: "for" "id" ":=" iter_space "do" statement

  110 iter_space: expression "to" expression
  111           | expression "downto" expression

  112 with_statement: "with" variable "do" statement

  113 subprogram_call: "id"
  114                | "id" "(" expressions ")"

  115 io_statement: "read" "(" read_list ")"
  116             | "write" "(" write_list ")"

  117 read_list: read_list "," read_item
  118          | read_item

  119 read_item: variable

  120 write_list: write_list "," write_item
  121           | write_item

  122 write_item: expression
  123           | "string"


Terminals, with rules where they appear

    "EOF" (0) 0
    error (256) 3 4 5 100 101 102 103 104
    "program" (258) 2 4 5
    "const" (259) 7
    "type" (260) 39
    "array" (261) 43
    "set" (262) 44
    "of" (263) 43 44
    "record" (264) 45
    "var" (265) 69 84
    "forward" (266) 75
    "function" (267) 77 79
    "procedure" (268) 78
    "integer" (269) 60
    "real" (270) 61
    "boolean" (271) 62
    "char" (272) 63
    "begin" (273) 86
    "end" (274) 45 86
    "if" (275) 105
    "then" (276) 105
    "else" (277) 106
    "while" (278) 108
    "do" (279) 108 109 112
    "for" (280) 109
    "downto" (281) 111
    "to" (282) 110
    "with" (283) 112
    "read" (284) 115
    "write" (285) 116
    "id" <strval> (286) 2 3 5 9 10 20 24 25 41 42 51 53 57 59 67 68 77 78 79 109 113 114
    "iconst" <intval> (287) 29 52 54
    "rconst" <floatval> (288) 30
    "bconst" <boolean> (289) 31 56
    "cconst" <charval> (290) 32 55
    "> or >= or < or <= or <>" (291) 11
    "+ or -" (292) 15 17 52 53
    "or" (293) 14
    "* or / or div or mod or and" (294) 16
    "not" (295) 18
    "in" (296) 13
    "string" (297) 99 102 103 123
    "(" (298) 20 22 46 80 114 115 116
    ")" (299) 20 22 46 80 114 115 116
    ";" (300) 2 3 4 7 9 39 41 64 69 71 73 75 76 82 87
    "." (301) 1 25
    "," (302) 27 35 48 67 117 120
    "=" (303) 9 10 12 41 42
    ":" (304) 66 71 72 77 82 83
    "[" (305) 26 33 34 43
    "]" (306) 26 33 34 43
    ":=" (307) 98 99 100 102 104 109
    ".." (308) 37 47 50
    LOWER_THAN_ELSE (309)


Nonterminals, with rules where they appear

    $accept (55)
        on left: 0
    program (56)
        on left: 1
        on right: 0
    header (57)
        on left: 2 3 4 5
        on right: 1
    declarations (58)
        on left: 6
        on right: 1 76
    constdefs (59)
        on left: 7 8
        on right: 6
    constant_defs (60)
        on left: 9 10
        on right: 7 9
    expression (61)
        on left: 11 12 13 14 15 16 17 18 19 20 21 22 23
        on right: 9 10 11 12 13 14 15 16 17 18 22 27 28 37 38 98 100 101 105 108 110 111 122
    variable (62)
        on left: 24 25 26
        on right: 19 25 26 98 99 101 103 104 112 119
    expressions (63)
        on left: 27 28
        on right: 20 26 27 114
    constant (64)
        on left: 29 30 31 32
        on right: 21
    setexpression (65)
        on left: 33 34
        on right: 23
    elexpressions (66)
        on left: 35 36
        on right: 33 35
    elexpression (67)
        on left: 37 38
        on right: 35 36
    typedefs (68)
        on left: 39 40
        on right: 6
    type_defs (69)
        on left: 41 42
        on right: 39 41
    type_def (70)
        on left: 43 44 45 46 47
        on right: 41 42
    dims (71)
        on left: 48 49
        on right: 43 48
    limits (72)
        on left: 50 51
        on right: 48 49
    limit (73)
        on left: 52 53 54 55 56 57
        on right: 47 50
    typename (74)
        on left: 58 59
        on right: 43 44 66 71 72 82 83
    standard_type (75)
        on left: 60 61 62 63
        on right: 58 77
    fields (76)
        on left: 64 65
        on right: 45 64
    field (77)
        on left: 66
        on right: 64 65
    identifiers (78)
        on left: 67 68
        on right: 46 66 67 71 72 82 83
    vardefs (79)
        on left: 69 70
        on right: 6
    variable_defs (80)
        on left: 71 72
        on right: 69 71
    subprograms (81)
        on left: 73 74
        on right: 1 73 76
    subprogram (82)
        on left: 75 76
        on right: 73
    sub_header (83)
        on left: 77 78 79
        on right: 75 76
    formal_parameters (84)
        on left: 80 81
        on right: 77 78
    parameter_list (85)
        on left: 82 83
        on right: 80 82
    pass (86)
        on left: 84 85
        on right: 82 83
    comp_statement (87)
        on left: 86
        on right: 1 76 96
    statements (88)
        on left: 87 88
        on right: 86 87
    statement (89)
        on left: 89 90 91 92 93 94 95 96 97
        on right: 87 88 105 106 108 109 112
    assignment (90)
        on left: 98 99 100 101 102 103 104
        on right: 89
    if_statement (91)
        on left: 105
        on right: 90
    if_tail (92)
        on left: 106 107
        on right: 105
    while_statement (93)
        on left: 108
        on right: 91
    for_statement (94)
        on left: 109
        on right: 92
    iter_space (95)
        on left: 110 111
        on right: 109
    with_statement (96)
        on left: 112
        on right: 93
    subprogram_call (97)
        on left: 113 114
        on right: 94
    io_statement (98)
        on left: 115 116
        on right: 95
    read_list (99)
        on left: 117 118
        on right: 115 117
    read_item (100)
        on left: 119
        on right: 117 118
    write_list (101)
        on left: 120 121
        on right: 116 120
    write_item (102)
        on left: 122 123
        on right: 120 121


State 0

    0 $accept: • program "EOF"

    error      shift, and go to state 1
    "program"  shift, and go to state 2

    program  go to state 3
    header   go to state 4


State 1

    3 header: error • "id" ";"

    "id"  shift, and go to state 5


State 2

    2 header: "program" • "id" ";"
    4       | "program" • error ";"
    5       | "program" • "id" error

    error  shift, and go to state 6
    "id"   shift, and go to state 7


State 3

    0 $accept: program • "EOF"

    "EOF"  shift, and go to state 8


State 4

    1 program: header • declarations subprograms comp_statement "."

    "const"  shift, and go to state 9

    $default  reduce using rule 8 (constdefs)

    declarations  go to state 10
    constdefs     go to state 11


State 5

    3 header: error "id" • ";"

    ";"  shift, and go to state 12


State 6

    4 header: "program" error • ";"

    ";"  shift, and go to state 13


State 7

    2 header: "program" "id" • ";"
    5       | "program" "id" • error

    error  shift, and go to state 14
    ";"    shift, and go to state 15


State 8

    0 $accept: program "EOF" •

    $default  accept


State 9

    7 constdefs: "const" • constant_defs ";"

    "id"  shift, and go to state 16

    constant_defs  go to state 17


State 10

    1 program: header declarations • subprograms comp_statement "."

    $default  reduce using rule 74 (subprograms)

    subprograms  go to state 18


State 11

    6 declarations: constdefs • typedefs vardefs

    "type"  shift, and go to state 19

    $default  reduce using rule 40 (typedefs)

    typedefs  go to state 20


State 12

    3 header: error "id" ";" •

    $default  reduce using rule 3 (header)


State 13

    4 header: "program" error ";" •

    $default  reduce using rule 4 (header)


State 14

    5 header: "program" "id" error •

    $default  reduce using rule 5 (header)


State 15

    2 header: "program" "id" ";" •

    $default  reduce using rule 2 (header)


State 16

   10 constant_defs: "id" • "=" expression

    "="  shift, and go to state 21


State 17

    7 constdefs: "const" constant_defs • ";"
    9 constant_defs: constant_defs • ";" "id" "=" expression

    ";"  shift, and go to state 22


State 18

    1 program: header declarations subprograms • comp_statement "."
   73 subprograms: subprograms • subprogram ";"

    "function"   shift, and go to state 23
    "procedure"  shift, and go to state 24
    "begin"      shift, and go to state 25

    subprogram      go to state 26
    sub_header      go to state 27
    comp_statement  go to state 28


State 19

   39 typedefs: "type" • type_defs ";"

    "id"  shift, and go to state 29

    type_defs  go to state 30


State 20

    6 declarations: constdefs typedefs • vardefs

    "var"  shift, and go to state 31

    $default  reduce using rule 70 (vardefs)

    vardefs  go to state 32


State 21

   10 constant_defs: "id" "=" • expression

    "id"      shift, and go to state 33
    "iconst"  shift, and go to state 34
    "rconst"  shift, and go to state 35
    "bconst"  shift, and go to state 36
    "cconst"  shift, and go to state 37
    "+ or -"  shift, and go to state 38
    "not"     shift, and go to state 39
    "("       shift, and go to state 40
    "["       shift, and go to state 41

    expression     go to state 42
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 22

    7 constdefs: "const" constant_defs ";" •
    9 constant_defs: constant_defs ";" • "id" "=" expression

    "id"  shift, and go to state 46

    $default  reduce using rule 7 (constdefs)


State 23

   77 sub_header: "function" • "id" formal_parameters ":" standard_type
   79           | "function" • "id"

    "id"  shift, and go to state 47


State 24

   78 sub_header: "procedure" • "id" formal_parameters

    "id"  shift, and go to state 48


State 25

   86 comp_statement: "begin" • statements "end"

    error    shift, and go to state 49
    "begin"  shift, and go to state 25
    "if"     shift, and go to state 50
    "while"  shift, and go to state 51
    "for"    shift, and go to state 52
    "with"   shift, and go to state 53
    "read"   shift, and go to state 54
    "write"  shift, and go to state 55
    "id"     shift, and go to state 56

    "end"  reduce using rule 97 (statement)
    ";"    reduce using rule 97 (statement)

    variable         go to state 57
    comp_statement   go to state 58
    statements       go to state 59
    statement        go to state 60
    assignment       go to state 61
    if_statement     go to state 62
    while_statement  go to state 63
    for_statement    go to state 64
    with_statement   go to state 65
    subprogram_call  go to state 66
    io_statement     go to state 67


State 26

   73 subprograms: subprograms subprogram • ";"

    ";"  shift, and go to state 68


State 27

   75 subprogram: sub_header • ";" "forward"
   76           | sub_header • ";" declarations subprograms comp_statement

    ";"  shift, and go to state 69


State 28

    1 program: header declarations subprograms comp_statement • "."

    "."  shift, and go to state 70


State 29

   42 type_defs: "id" • "=" type_def

    "="  shift, and go to state 71


State 30

   39 typedefs: "type" type_defs • ";"
   41 type_defs: type_defs • ";" "id" "=" type_def

    ";"  shift, and go to state 72


State 31

   69 vardefs: "var" • variable_defs ";"

    "id"  shift, and go to state 73

    identifiers    go to state 74
    variable_defs  go to state 75


State 32

    6 declarations: constdefs typedefs vardefs •

    $default  reduce using rule 6 (declarations)


State 33

   20 expression: "id" • "(" expressions ")"
   24 variable: "id" •

    "("  shift, and go to state 76

    $default  reduce using rule 24 (variable)


State 34

   29 constant: "iconst" •

    $default  reduce using rule 29 (constant)


State 35

   30 constant: "rconst" •

    $default  reduce using rule 30 (constant)


State 36

   31 constant: "bconst" •

    $default  reduce using rule 31 (constant)


State 37

   32 constant: "cconst" •

    $default  reduce using rule 32 (constant)


State 38

   17 expression: "+ or -" • expression

    "id"      shift, and go to state 33
    "iconst"  shift, and go to state 34
    "rconst"  shift, and go to state 35
    "bconst"  shift, and go to state 36
    "cconst"  shift, and go to state 37
    "+ or -"  shift, and go to state 38
    "not"     shift, and go to state 39
    "("       shift, and go to state 40
    "["       shift, and go to state 41

    expression     go to state 77
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 39

   18 expression: "not" • expression

    "id"      shift, and go to state 33
    "iconst"  shift, and go to state 34
    "rconst"  shift, and go to state 35
    "bconst"  shift, and go to state 36
    "cconst"  shift, and go to state 37
    "+ or -"  shift, and go to state 38
    "not"     shift, and go to state 39
    "("       shift, and go to state 40
    "["       shift, and go to state 41

    expression     go to state 78
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 40

   22 expression: "(" • expression ")"

    "id"      shift, and go to state 33
    "iconst"  shift, and go to state 34
    "rconst"  shift, and go to state 35
    "bconst"  shift, and go to state 36
    "cconst"  shift, and go to state 37
    "+ or -"  shift, and go to state 38
    "not"     shift, and go to state 39
    "("       shift, and go to state 40
    "["       shift, and go to state 41

    expression     go to state 79
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 41

   33 setexpression: "[" • elexpressions "]"
   34              | "[" • "]"

    "id"      shift, and go to state 33
    "iconst"  shift, and go to state 34
    "rconst"  shift, and go to state 35
    "bconst"  shift, and go to state 36
    "cconst"  shift, and go to state 37
    "+ or -"  shift, and go to state 38
    "not"     shift, and go to state 39
    "("       shift, and go to state 40
    "["       shift, and go to state 41
    "]"       shift, and go to state 80

    expression     go to state 81
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45
    elexpressions  go to state 82
    elexpression   go to state 83


State 42

   10 constant_defs: "id" "=" expression •
   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression

    "> or >= or < or <= or <>"     shift, and go to state 84
    "+ or -"                       shift, and go to state 85
    "or"                           shift, and go to state 86
    "* or / or div or mod or and"  shift, and go to state 87
    "in"                           shift, and go to state 88
    "="                            shift, and go to state 89

    $default  reduce using rule 10 (constant_defs)


State 43

   19 expression: variable •
   25 variable: variable • "." "id"
   26         | variable • "[" expressions "]"

    "."  shift, and go to state 90
    "["  shift, and go to state 91

    $default  reduce using rule 19 (expression)


State 44

   21 expression: constant •

    $default  reduce using rule 21 (expression)


State 45

   23 expression: setexpression •

    $default  reduce using rule 23 (expression)


State 46

    9 constant_defs: constant_defs ";" "id" • "=" expression

    "="  shift, and go to state 92


State 47

   77 sub_header: "function" "id" • formal_parameters ":" standard_type
   79           | "function" "id" •

    "("  shift, and go to state 93

    ":"       reduce using rule 81 (formal_parameters)
    $default  reduce using rule 79 (sub_header)

    formal_parameters  go to state 94


State 48

   78 sub_header: "procedure" "id" • formal_parameters

    "("  shift, and go to state 93

    $default  reduce using rule 81 (formal_parameters)

    formal_parameters  go to state 95


State 49

  100 assignment: error • ":=" expression
  102           | error • ":=" "string"

    ":="  shift, and go to state 96


State 50

  105 if_statement: "if" • expression "then" statement if_tail

    "id"      shift, and go to state 33
    "iconst"  shift, and go to state 34
    "rconst"  shift, and go to state 35
    "bconst"  shift, and go to state 36
    "cconst"  shift, and go to state 37
    "+ or -"  shift, and go to state 38
    "not"     shift, and go to state 39
    "("       shift, and go to state 40
    "["       shift, and go to state 41

    expression     go to state 97
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 51

  108 while_statement: "while" • expression "do" statement

    "id"      shift, and go to state 33
    "iconst"  shift, and go to state 34
    "rconst"  shift, and go to state 35
    "bconst"  shift, and go to state 36
    "cconst"  shift, and go to state 37
    "+ or -"  shift, and go to state 38
    "not"     shift, and go to state 39
    "("       shift, and go to state 40
    "["       shift, and go to state 41

    expression     go to state 98
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 52

  109 for_statement: "for" • "id" ":=" iter_space "do" statement

    "id"  shift, and go to state 99


State 53

  112 with_statement: "with" • variable "do" statement

    "id"  shift, and go to state 100

    variable  go to state 101


State 54

  115 io_statement: "read" • "(" read_list ")"

    "("  shift, and go to state 102


State 55

  116 io_statement: "write" • "(" write_list ")"

    "("  shift, and go to state 103


State 56

   24 variable: "id" •
  113 subprogram_call: "id" •
  114                | "id" • "(" expressions ")"

    "("  shift, and go to state 104

    "end"     reduce using rule 113 (subprogram_call)
    "else"    reduce using rule 113 (subprogram_call)
    ";"       reduce using rule 113 (subprogram_call)
    $default  reduce using rule 24 (variable)


State 57

   25 variable: variable • "." "id"
   26         | variable • "[" expressions "]"
   98 assignment: variable • ":=" expression
   99           | variable • ":=" "string"
  101           | variable • error expression
  103           | variable • error "string"
  104           | variable • ":=" error

    error  shift, and go to state 105
    "."    shift, and go to state 90
    "["    shift, and go to state 91
    ":="   shift, and go to state 106


State 58

   96 statement: comp_statement •

    $default  reduce using rule 96 (statement)


State 59

   86 comp_statement: "begin" statements • "end"
   87 statements: statements • ";" statement

    "end"  shift, and go to state 107
    ";"    shift, and go to state 108


State 60

   88 statements: statement •

    $default  reduce using rule 88 (statements)


State 61

   89 statement: assignment •

    $default  reduce using rule 89 (statement)


State 62

   90 statement: if_statement •

    $default  reduce using rule 90 (statement)


State 63

   91 statement: while_statement •

    $default  reduce using rule 91 (statement)


State 64

   92 statement: for_statement •

    $default  reduce using rule 92 (statement)


State 65

   93 statement: with_statement •

    $default  reduce using rule 93 (statement)


State 66

   94 statement: subprogram_call •

    $default  reduce using rule 94 (statement)


State 67

   95 statement: io_statement •

    $default  reduce using rule 95 (statement)


State 68

   73 subprograms: subprograms subprogram ";" •

    $default  reduce using rule 73 (subprograms)


State 69

   75 subprogram: sub_header ";" • "forward"
   76           | sub_header ";" • declarations subprograms comp_statement

    "const"    shift, and go to state 9
    "forward"  shift, and go to state 109

    $default  reduce using rule 8 (constdefs)

    declarations  go to state 110
    constdefs     go to state 11


State 70

    1 program: header declarations subprograms comp_statement "." •

    $default  reduce using rule 1 (program)


State 71

   42 type_defs: "id" "=" • type_def

    "array"   shift, and go to state 111
    "set"     shift, and go to state 112
    "record"  shift, and go to state 113
    "id"      shift, and go to state 114
    "iconst"  shift, and go to state 115
    "bconst"  shift, and go to state 116
    "cconst"  shift, and go to state 117
    "+ or -"  shift, and go to state 118
    "("       shift, and go to state 119

    type_def  go to state 120
    limit     go to state 121


State 72

   39 typedefs: "type" type_defs ";" •
   41 type_defs: type_defs ";" • "id" "=" type_def

    "id"  shift, and go to state 122

    $default  reduce using rule 39 (typedefs)


State 73

   68 identifiers: "id" •

    $default  reduce using rule 68 (identifiers)


State 74

   67 identifiers: identifiers • "," "id"
   72 variable_defs: identifiers • ":" typename

    ","  shift, and go to state 123
    ":"  shift, and go to state 124


State 75

   69 vardefs: "var" variable_defs • ";"
   71 variable_defs: variable_defs • ";" identifiers ":" typename

    ";"  shift, and go to state 125


State 76

   20 expression: "id" "(" • expressions ")"

    "id"      shift, and go to state 33
    "iconst"  shift, and go to state 34
    "rconst"  shift, and go to state 35
    "bconst"  shift, and go to state 36
    "cconst"  shift, and go to state 37
    "+ or -"  shift, and go to state 38
    "not"     shift, and go to state 39
    "("       shift, and go to state 40
    "["       shift, and go to state 41

    expression     go to state 126
    variable       go to state 43
    expressions    go to state 127
    constant       go to state 44
    setexpression  go to state 45


State 77

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression
   17           | "+ or -" expression •

    "* or / or div or mod or and"  shift, and go to state 87

    $default  reduce using rule 17 (expression)


State 78

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression
   18           | "not" expression •

    $default  reduce using rule 18 (expression)


State 79

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression
   22           | "(" expression • ")"

    "> or >= or < or <= or <>"     shift, and go to state 84
    "+ or -"                       shift, and go to state 85
    "or"                           shift, and go to state 86
    "* or / or div or mod or and"  shift, and go to state 87
    "in"                           shift, and go to state 88
    ")"                            shift, and go to state 128
    "="                            shift, and go to state 89


State 80

   34 setexpression: "[" "]" •

    $default  reduce using rule 34 (setexpression)


State 81

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression
   37 elexpression: expression • ".." expression
   38             | expression •

    "> or >= or < or <= or <>"     shift, and go to state 84
    "+ or -"                       shift, and go to state 85
    "or"                           shift, and go to state 86
    "* or / or div or mod or and"  shift, and go to state 87
    "in"                           shift, and go to state 88
    "="                            shift, and go to state 89
    ".."                           shift, and go to state 129

    $default  reduce using rule 38 (elexpression)


State 82

   33 setexpression: "[" elexpressions • "]"
   35 elexpressions: elexpressions • "," elexpression

    ","  shift, and go to state 130
    "]"  shift, and go to state 131


State 83

   36 elexpressions: elexpression •

    $default  reduce using rule 36 (elexpressions)


State 84

   11 expression: expression "> or >= or < or <= or <>" • expression

    "id"      shift, and go to state 33
    "iconst"  shift, and go to state 34
    "rconst"  shift, and go to state 35
    "bconst"  shift, and go to state 36
    "cconst"  shift, and go to state 37
    "+ or -"  shift, and go to state 38
    "not"     shift, and go to state 39
    "("       shift, and go to state 40
    "["       shift, and go to state 41

    expression     go to state 132
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 85

   15 expression: expression "+ or -" • expression

    "id"      shift, and go to state 33
    "iconst"  shift, and go to state 34
    "rconst"  shift, and go to state 35
    "bconst"  shift, and go to state 36
    "cconst"  shift, and go to state 37
    "+ or -"  shift, and go to state 38
    "not"     shift, and go to state 39
    "("       shift, and go to state 40
    "["       shift, and go to state 41

    expression     go to state 133
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 86

   14 expression: expression "or" • expression

    "id"      shift, and go to state 33
    "iconst"  shift, and go to state 34
    "rconst"  shift, and go to state 35
    "bconst"  shift, and go to state 36
    "cconst"  shift, and go to state 37
    "+ or -"  shift, and go to state 38
    "not"     shift, and go to state 39
    "("       shift, and go to state 40
    "["       shift, and go to state 41

    expression     go to state 134
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 87

   16 expression: expression "* or / or div or mod or and" • expression

    "id"      shift, and go to state 33
    "iconst"  shift, and go to state 34
    "rconst"  shift, and go to state 35
    "bconst"  shift, and go to state 36
    "cconst"  shift, and go to state 37
    "+ or -"  shift, and go to state 38
    "not"     shift, and go to state 39
    "("       shift, and go to state 40
    "["       shift, and go to state 41

    expression     go to state 135
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 88

   13 expression: expression "in" • expression

    "id"      shift, and go to state 33
    "iconst"  shift, and go to state 34
    "rconst"  shift, and go to state 35
    "bconst"  shift, and go to state 36
    "cconst"  shift, and go to state 37
    "+ or -"  shift, and go to state 38
    "not"     shift, and go to state 39
    "("       shift, and go to state 40
    "["       shift, and go to state 41

    expression     go to state 136
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 89

   12 expression: expression "=" • expression

    "id"      shift, and go to state 33
    "iconst"  shift, and go to state 34
    "rconst"  shift, and go to state 35
    "bconst"  shift, and go to state 36
    "cconst"  shift, and go to state 37
    "+ or -"  shift, and go to state 38
    "not"     shift, and go to state 39
    "("       shift, and go to state 40
    "["       shift, and go to state 41

    expression     go to state 137
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 90

   25 variable: variable "." • "id"

    "id"  shift, and go to state 138


State 91

   26 variable: variable "[" • expressions "]"

    "id"      shift, and go to state 33
    "iconst"  shift, and go to state 34
    "rconst"  shift, and go to state 35
    "bconst"  shift, and go to state 36
    "cconst"  shift, and go to state 37
    "+ or -"  shift, and go to state 38
    "not"     shift, and go to state 39
    "("       shift, and go to state 40
    "["       shift, and go to state 41

    expression     go to state 126
    variable       go to state 43
    expressions    go to state 139
    constant       go to state 44
    setexpression  go to state 45


State 92

    9 constant_defs: constant_defs ";" "id" "=" • expression

    "id"      shift, and go to state 33
    "iconst"  shift, and go to state 34
    "rconst"  shift, and go to state 35
    "bconst"  shift, and go to state 36
    "cconst"  shift, and go to state 37
    "+ or -"  shift, and go to state 38
    "not"     shift, and go to state 39
    "("       shift, and go to state 40
    "["       shift, and go to state 41

    expression     go to state 140
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 93

   80 formal_parameters: "(" • parameter_list ")"

    "var"  shift, and go to state 141

    $default  reduce using rule 85 (pass)

    parameter_list  go to state 142
    pass            go to state 143


State 94

   77 sub_header: "function" "id" formal_parameters • ":" standard_type

    ":"  shift, and go to state 144


State 95

   78 sub_header: "procedure" "id" formal_parameters •

    $default  reduce using rule 78 (sub_header)


State 96

  100 assignment: error ":=" • expression
  102           | error ":=" • "string"

    "id"      shift, and go to state 33
    "iconst"  shift, and go to state 34
    "rconst"  shift, and go to state 35
    "bconst"  shift, and go to state 36
    "cconst"  shift, and go to state 37
    "+ or -"  shift, and go to state 38
    "not"     shift, and go to state 39
    "string"  shift, and go to state 145
    "("       shift, and go to state 40
    "["       shift, and go to state 41

    expression     go to state 146
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 97

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression
  105 if_statement: "if" expression • "then" statement if_tail

    "then"                         shift, and go to state 147
    "> or >= or < or <= or <>"     shift, and go to state 84
    "+ or -"                       shift, and go to state 85
    "or"                           shift, and go to state 86
    "* or / or div or mod or and"  shift, and go to state 87
    "in"                           shift, and go to state 88
    "="                            shift, and go to state 89


State 98

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression
  108 while_statement: "while" expression • "do" statement

    "do"                           shift, and go to state 148
    "> or >= or < or <= or <>"     shift, and go to state 84
    "+ or -"                       shift, and go to state 85
    "or"                           shift, and go to state 86
    "* or / or div or mod or and"  shift, and go to state 87
    "in"                           shift, and go to state 88
    "="                            shift, and go to state 89


State 99

  109 for_statement: "for" "id" • ":=" iter_space "do" statement

    ":="  shift, and go to state 149


State 100

   24 variable: "id" •

    $default  reduce using rule 24 (variable)


State 101

   25 variable: variable • "." "id"
   26         | variable • "[" expressions "]"
  112 with_statement: "with" variable • "do" statement

    "do"  shift, and go to state 150
    "."   shift, and go to state 90
    "["   shift, and go to state 91


State 102

  115 io_statement: "read" "(" • read_list ")"

    "id"  shift, and go to state 100

    variable   go to state 151
    read_list  go to state 152
    read_item  go to state 153


State 103

  116 io_statement: "write" "(" • write_list ")"

    "id"      shift, and go to state 33
    "iconst"  shift, and go to state 34
    "rconst"  shift, and go to state 35
    "bconst"  shift, and go to state 36
    "cconst"  shift, and go to state 37
    "+ or -"  shift, and go to state 38
    "not"     shift, and go to state 39
    "string"  shift, and go to state 154
    "("       shift, and go to state 40
    "["       shift, and go to state 41

    expression     go to state 155
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45
    write_list     go to state 156
    write_item     go to state 157


State 104

  114 subprogram_call: "id" "(" • expressions ")"

    "id"      shift, and go to state 33
    "iconst"  shift, and go to state 34
    "rconst"  shift, and go to state 35
    "bconst"  shift, and go to state 36
    "cconst"  shift, and go to state 37
    "+ or -"  shift, and go to state 38
    "not"     shift, and go to state 39
    "("       shift, and go to state 40
    "["       shift, and go to state 41

    expression     go to state 126
    variable       go to state 43
    expressions    go to state 158
    constant       go to state 44
    setexpression  go to state 45


State 105

  101 assignment: variable error • expression
  103           | variable error • "string"

    "id"      shift, and go to state 33
    "iconst"  shift, and go to state 34
    "rconst"  shift, and go to state 35
    "bconst"  shift, and go to state 36
    "cconst"  shift, and go to state 37
    "+ or -"  shift, and go to state 38
    "not"     shift, and go to state 39
    "string"  shift, and go to state 159
    "("       shift, and go to state 40
    "["       shift, and go to state 41

    expression     go to state 160
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 106

   98 assignment: variable ":=" • expression
   99           | variable ":=" • "string"
  104           | variable ":=" • error

    error     shift, and go to state 161
    "id"      shift, and go to state 33
    "iconst"  shift, and go to state 34
    "rconst"  shift, and go to state 35
    "bconst"  shift, and go to state 36
    "cconst"  shift, and go to state 37
    "+ or -"  shift, and go to state 38
    "not"     shift, and go to state 39
    "string"  shift, and go to state 162
    "("       shift, and go to state 40
    "["       shift, and go to state 41

    expression     go to state 163
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 107

   86 comp_statement: "begin" statements "end" •

    $default  reduce using rule 86 (comp_statement)


State 108

   87 statements: statements ";" • statement

    error    shift, and go to state 49
    "begin"  shift, and go to state 25
    "if"     shift, and go to state 50
    "while"  shift, and go to state 51
    "for"    shift, and go to state 52
    "with"   shift, and go to state 53
    "read"   shift, and go to state 54
    "write"  shift, and go to state 55
    "id"     shift, and go to state 56

    "end"  reduce using rule 97 (statement)
    ";"    reduce using rule 97 (statement)

    variable         go to state 57
    comp_statement   go to state 58
    statement        go to state 164
    assignment       go to state 61
    if_statement     go to state 62
    while_statement  go to state 63
    for_statement    go to state 64
    with_statement   go to state 65
    subprogram_call  go to state 66
    io_statement     go to state 67


State 109

   75 subprogram: sub_header ";" "forward" •

    $default  reduce using rule 75 (subprogram)


State 110

   76 subprogram: sub_header ";" declarations • subprograms comp_statement

    $default  reduce using rule 74 (subprograms)

    subprograms  go to state 165


State 111

   43 type_def: "array" • "[" dims "]" "of" typename

    "["  shift, and go to state 166


State 112

   44 type_def: "set" • "of" typename

    "of"  shift, and go to state 167


State 113

   45 type_def: "record" • fields "end"

    "id"  shift, and go to state 73

    fields       go to state 168
    field        go to state 169
    identifiers  go to state 170


State 114

   57 limit: "id" •

    $default  reduce using rule 57 (limit)


State 115

   54 limit: "iconst" •

    $default  reduce using rule 54 (limit)


State 116

   56 limit: "bconst" •

    $default  reduce using rule 56 (limit)


State 117

   55 limit: "cconst" •

    $default  reduce using rule 55 (limit)


State 118

   52 limit: "+ or -" • "iconst"
   53      | "+ or -" • "id"

    "id"      shift, and go to state 171
    "iconst"  shift, and go to state 172


State 119

   46 type_def: "(" • identifiers ")"

    "id"  shift, and go to state 73

    identifiers  go to state 173


State 120

   42 type_defs: "id" "=" type_def •

    $default  reduce using rule 42 (type_defs)


State 121

   47 type_def: limit • ".." limit

    ".."  shift, and go to state 174


State 122

   41 type_defs: type_defs ";" "id" • "=" type_def

    "="  shift, and go to state 175


State 123

   67 identifiers: identifiers "," • "id"

    "id"  shift, and go to state 176


State 124

   72 variable_defs: identifiers ":" • typename

    "integer"  shift, and go to state 177
    "real"     shift, and go to state 178
    "boolean"  shift, and go to state 179
    "char"     shift, and go to state 180
    "id"       shift, and go to state 181

    typename       go to state 182
    standard_type  go to state 183


State 125

   69 vardefs: "var" variable_defs ";" •
   71 variable_defs: variable_defs ";" • identifiers ":" typename

    "id"  shift, and go to state 73

    $default  reduce using rule 69 (vardefs)

    identifiers  go to state 184


State 126

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression
   28 expressions: expression •

    "> or >= or < or <= or <>"     shift, and go to state 84
    "+ or -"                       shift, and go to state 85
    "or"                           shift, and go to state 86
    "* or / or div or mod or and"  shift, and go to state 87
    "in"                           shift, and go to state 88
    "="                            shift, and go to state 89

    $default  reduce using rule 28 (expressions)


State 127

   20 expression: "id" "(" expressions • ")"
   27 expressions: expressions • "," expression

    ")"  shift, and go to state 185
    ","  shift, and go to state 186


State 128

   22 expression: "(" expression ")" •

    $default  reduce using rule 22 (expression)


State 129

   37 elexpression: expression ".." • expression

    "id"      shift, and go to state 33
    "iconst"  shift, and go to state 34
    "rconst"  shift, and go to state 35
    "bconst"  shift, and go to state 36
    "cconst"  shift, and go to state 37
    "+ or -"  shift, and go to state 38
    "not"     shift, and go to state 39
    "("       shift, and go to state 40
    "["       shift, and go to state 41

    expression     go to state 187
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 130

   35 elexpressions: elexpressions "," • elexpression

    "id"      shift, and go to state 33
    "iconst"  shift, and go to state 34
    "rconst"  shift, and go to state 35
    "bconst"  shift, and go to state 36
    "cconst"  shift, and go to state 37
    "+ or -"  shift, and go to state 38
    "not"     shift, and go to state 39
    "("       shift, and go to state 40
    "["       shift, and go to state 41

    expression     go to state 81
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45
    elexpression   go to state 188


State 131

   33 setexpression: "[" elexpressions "]" •

    $default  reduce using rule 33 (setexpression)


State 132

   11 expression: expression • "> or >= or < or <= or <>" expression
   11           | expression "> or >= or < or <= or <>" expression •
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression

    "+ or -"                       shift, and go to state 85
    "or"                           shift, and go to state 86
    "* or / or div or mod or and"  shift, and go to state 87

    $default  reduce using rule 11 (expression)


State 133

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   15           | expression "+ or -" expression •
   16           | expression • "* or / or div or mod or and" expression

    "* or / or div or mod or and"  shift, and go to state 87

    $default  reduce using rule 15 (expression)


State 134

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   14           | expression "or" expression •
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression

    "* or / or div or mod or and"  shift, and go to state 87

    $default  reduce using rule 14 (expression)


State 135

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression
   16           | expression "* or / or div or mod or and" expression •

    $default  reduce using rule 16 (expression)


State 136

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   13           | expression "in" expression •
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression

    "+ or -"                       shift, and go to state 85
    "or"                           shift, and go to state 86
    "* or / or div or mod or and"  shift, and go to state 87

    $default  reduce using rule 13 (expression)


State 137

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   12           | expression "=" expression •
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression

    "+ or -"                       shift, and go to state 85
    "or"                           shift, and go to state 86
    "* or / or div or mod or and"  shift, and go to state 87

    $default  reduce using rule 12 (expression)


State 138

   25 variable: variable "." "id" •

    $default  reduce using rule 25 (variable)


State 139

   26 variable: variable "[" expressions • "]"
   27 expressions: expressions • "," expression

    ","  shift, and go to state 186
    "]"  shift, and go to state 189


State 140

    9 constant_defs: constant_defs ";" "id" "=" expression •
   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression

    "> or >= or < or <= or <>"     shift, and go to state 84
    "+ or -"                       shift, and go to state 85
    "or"                           shift, and go to state 86
    "* or / or div or mod or and"  shift, and go to state 87
    "in"                           shift, and go to state 88
    "="                            shift, and go to state 89

    $default  reduce using rule 9 (constant_defs)


State 141

   84 pass: "var" •

    $default  reduce using rule 84 (pass)


State 142

   80 formal_parameters: "(" parameter_list • ")"
   82 parameter_list: parameter_list • ";" pass identifiers ":" typename

    ")"  shift, and go to state 190
    ";"  shift, and go to state 191


State 143

   83 parameter_list: pass • identifiers ":" typename

    "id"  shift, and go to state 73

    identifiers  go to state 192


State 144

   77 sub_header: "function" "id" formal_parameters ":" • standard_type

    "integer"  shift, and go to state 177
    "real"     shift, and go to state 178
    "boolean"  shift, and go to state 179
    "char"     shift, and go to state 180

    standard_type  go to state 193


State 145

  102 assignment: error ":=" "string" •

    $default  reduce using rule 102 (assignment)


State 146

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression
  100 assignment: error ":=" expression •

    "> or >= or < or <= or <>"     shift, and go to state 84
    "+ or -"                       shift, and go to state 85
    "or"                           shift, and go to state 86
    "* or / or div or mod or and"  shift, and go to state 87
    "in"                           shift, and go to state 88
    "="                            shift, and go to state 89

    $default  reduce using rule 100 (assignment)


State 147

  105 if_statement: "if" expression "then" • statement if_tail

    error    shift, and go to state 49
    "begin"  shift, and go to state 25
    "if"     shift, and go to state 50
    "while"  shift, and go to state 51
    "for"    shift, and go to state 52
    "with"   shift, and go to state 53
    "read"   shift, and go to state 54
    "write"  shift, and go to state 55
    "id"     shift, and go to state 56

    "end"   reduce using rule 97 (statement)
    "else"  reduce using rule 97 (statement)
    ";"     reduce using rule 97 (statement)

    variable         go to state 57
    comp_statement   go to state 58
    statement        go to state 194
    assignment       go to state 61
    if_statement     go to state 62
    while_statement  go to state 63
    for_statement    go to state 64
    with_statement   go to state 65
    subprogram_call  go to state 66
    io_statement     go to state 67


State 148

  108 while_statement: "while" expression "do" • statement

    error    shift, and go to state 49
    "begin"  shift, and go to state 25
    "if"     shift, and go to state 50
    "while"  shift, and go to state 51
    "for"    shift, and go to state 52
    "with"   shift, and go to state 53
    "read"   shift, and go to state 54
    "write"  shift, and go to state 55
    "id"     shift, and go to state 56

    "end"   reduce using rule 97 (statement)
    "else"  reduce using rule 97 (statement)
    ";"     reduce using rule 97 (statement)

    variable         go to state 57
    comp_statement   go to state 58
    statement        go to state 195
    assignment       go to state 61
    if_statement     go to state 62
    while_statement  go to state 63
    for_statement    go to state 64
    with_statement   go to state 65
    subprogram_call  go to state 66
    io_statement     go to state 67


State 149

  109 for_statement: "for" "id" ":=" • iter_space "do" statement

    "id"      shift, and go to state 33
    "iconst"  shift, and go to state 34
    "rconst"  shift, and go to state 35
    "bconst"  shift, and go to state 36
    "cconst"  shift, and go to state 37
    "+ or -"  shift, and go to state 38
    "not"     shift, and go to state 39
    "("       shift, and go to state 40
    "["       shift, and go to state 41

    expression     go to state 196
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45
    iter_space     go to state 197


State 150

  112 with_statement: "with" variable "do" • statement

    error    shift, and go to state 49
    "begin"  shift, and go to state 25
    "if"     shift, and go to state 50
    "while"  shift, and go to state 51
    "for"    shift, and go to state 52
    "with"   shift, and go to state 53
    "read"   shift, and go to state 54
    "write"  shift, and go to state 55
    "id"     shift, and go to state 56

    "end"   reduce using rule 97 (statement)
    "else"  reduce using rule 97 (statement)
    ";"     reduce using rule 97 (statement)

    variable         go to state 57
    comp_statement   go to state 58
    statement        go to state 198
    assignment       go to state 61
    if_statement     go to state 62
    while_statement  go to state 63
    for_statement    go to state 64
    with_statement   go to state 65
    subprogram_call  go to state 66
    io_statement     go to state 67


State 151

   25 variable: variable • "." "id"
   26         | variable • "[" expressions "]"
  119 read_item: variable •

    "."  shift, and go to state 90
    "["  shift, and go to state 91

    $default  reduce using rule 119 (read_item)


State 152

  115 io_statement: "read" "(" read_list • ")"
  117 read_list: read_list • "," read_item

    ")"  shift, and go to state 199
    ","  shift, and go to state 200


State 153

  118 read_list: read_item •

    $default  reduce using rule 118 (read_list)


State 154

  123 write_item: "string" •

    $default  reduce using rule 123 (write_item)


State 155

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression
  122 write_item: expression •

    "> or >= or < or <= or <>"     shift, and go to state 84
    "+ or -"                       shift, and go to state 85
    "or"                           shift, and go to state 86
    "* or / or div or mod or and"  shift, and go to state 87
    "in"                           shift, and go to state 88
    "="                            shift, and go to state 89

    $default  reduce using rule 122 (write_item)


State 156

  116 io_statement: "write" "(" write_list • ")"
  120 write_list: write_list • "," write_item

    ")"  shift, and go to state 201
    ","  shift, and go to state 202


State 157

  121 write_list: write_item •

    $default  reduce using rule 121 (write_list)


State 158

   27 expressions: expressions • "," expression
  114 subprogram_call: "id" "(" expressions • ")"

    ")"  shift, and go to state 203
    ","  shift, and go to state 186


State 159

  103 assignment: variable error "string" •

    $default  reduce using rule 103 (assignment)


State 160

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression
  101 assignment: variable error expression •

    "> or >= or < or <= or <>"     shift, and go to state 84
    "+ or -"                       shift, and go to state 85
    "or"                           shift, and go to state 86
    "* or / or div or mod or and"  shift, and go to state 87
    "in"                           shift, and go to state 88
    "="                            shift, and go to state 89

    $default  reduce using rule 101 (assignment)


State 161

  104 assignment: variable ":=" error •

    $default  reduce using rule 104 (assignment)


State 162

   99 assignment: variable ":=" "string" •

    $default  reduce using rule 99 (assignment)


State 163

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression
   98 assignment: variable ":=" expression •

    "> or >= or < or <= or <>"     shift, and go to state 84
    "+ or -"                       shift, and go to state 85
    "or"                           shift, and go to state 86
    "* or / or div or mod or and"  shift, and go to state 87
    "in"                           shift, and go to state 88
    "="                            shift, and go to state 89

    $default  reduce using rule 98 (assignment)


State 164

   87 statements: statements ";" statement •

    $default  reduce using rule 87 (statements)


State 165

   73 subprograms: subprograms • subprogram ";"
   76 subprogram: sub_header ";" declarations subprograms • comp_statement

    "function"   shift, and go to state 23
    "procedure"  shift, and go to state 24
    "begin"      shift, and go to state 25

    subprogram      go to state 26
    sub_header      go to state 27
    comp_statement  go to state 204


State 166

   43 type_def: "array" "[" • dims "]" "of" typename

    "id"      shift, and go to state 205
    "iconst"  shift, and go to state 115
    "bconst"  shift, and go to state 116
    "cconst"  shift, and go to state 117
    "+ or -"  shift, and go to state 118

    dims    go to state 206
    limits  go to state 207
    limit   go to state 208


State 167

   44 type_def: "set" "of" • typename

    "integer"  shift, and go to state 177
    "real"     shift, and go to state 178
    "boolean"  shift, and go to state 179
    "char"     shift, and go to state 180
    "id"       shift, and go to state 181

    typename       go to state 209
    standard_type  go to state 183


State 168

   45 type_def: "record" fields • "end"
   64 fields: fields • ";" field

    "end"  shift, and go to state 210
    ";"    shift, and go to state 211


State 169

   65 fields: field •

    $default  reduce using rule 65 (fields)


State 170

   66 field: identifiers • ":" typename
   67 identifiers: identifiers • "," "id"

    ","  shift, and go to state 123
    ":"  shift, and go to state 212


State 171

   53 limit: "+ or -" "id" •

    $default  reduce using rule 53 (limit)


State 172

   52 limit: "+ or -" "iconst" •

    $default  reduce using rule 52 (limit)


State 173

   46 type_def: "(" identifiers • ")"
   67 identifiers: identifiers • "," "id"

    ")"  shift, and go to state 213
    ","  shift, and go to state 123


State 174

   47 type_def: limit ".." • limit

    "id"      shift, and go to state 114
    "iconst"  shift, and go to state 115
    "bconst"  shift, and go to state 116
    "cconst"  shift, and go to state 117
    "+ or -"  shift, and go to state 118

    limit  go to state 214


State 175

   41 type_defs: type_defs ";" "id" "=" • type_def

    "array"   shift, and go to state 111
    "set"     shift, and go to state 112
    "record"  shift, and go to state 113
    "id"      shift, and go to state 114
    "iconst"  shift, and go to state 115
    "bconst"  shift, and go to state 116
    "cconst"  shift, and go to state 117
    "+ or -"  shift, and go to state 118
    "("       shift, and go to state 119

    type_def  go to state 215
    limit     go to state 121


State 176

   67 identifiers: identifiers "," "id" •

    $default  reduce using rule 67 (identifiers)


State 177

   60 standard_type: "integer" •

    $default  reduce using rule 60 (standard_type)


State 178

   61 standard_type: "real" •

    $default  reduce using rule 61 (standard_type)


State 179

   62 standard_type: "boolean" •

    $default  reduce using rule 62 (standard_type)


State 180

   63 standard_type: "char" •

    $default  reduce using rule 63 (standard_type)


State 181

   59 typename: "id" •

    $default  reduce using rule 59 (typename)


State 182

   72 variable_defs: identifiers ":" typename •

    $default  reduce using rule 72 (variable_defs)


State 183

   58 typename: standard_type •

    $default  reduce using rule 58 (typename)


State 184

   67 identifiers: identifiers • "," "id"
   71 variable_defs: variable_defs ";" identifiers • ":" typename

    ","  shift, and go to state 123
    ":"  shift, and go to state 216


State 185

   20 expression: "id" "(" expressions ")" •

    $default  reduce using rule 20 (expression)


State 186

   27 expressions: expressions "," • expression

    "id"      shift, and go to state 33
    "iconst"  shift, and go to state 34
    "rconst"  shift, and go to state 35
    "bconst"  shift, and go to state 36
    "cconst"  shift, and go to state 37
    "+ or -"  shift, and go to state 38
    "not"     shift, and go to state 39
    "("       shift, and go to state 40
    "["       shift, and go to state 41

    expression     go to state 217
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 187

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression
   37 elexpression: expression ".." expression •

    "> or >= or < or <= or <>"     shift, and go to state 84
    "+ or -"                       shift, and go to state 85
    "or"                           shift, and go to state 86
    "* or / or div or mod or and"  shift, and go to state 87
    "in"                           shift, and go to state 88
    "="                            shift, and go to state 89

    $default  reduce using rule 37 (elexpression)


State 188

   35 elexpressions: elexpressions "," elexpression •

    $default  reduce using rule 35 (elexpressions)


State 189

   26 variable: variable "[" expressions "]" •

    $default  reduce using rule 26 (variable)


State 190

   80 formal_parameters: "(" parameter_list ")" •

    $default  reduce using rule 80 (formal_parameters)


State 191

   82 parameter_list: parameter_list ";" • pass identifiers ":" typename

    "var"  shift, and go to state 141

    $default  reduce using rule 85 (pass)

    pass  go to state 218


State 192

   67 identifiers: identifiers • "," "id"
   83 parameter_list: pass identifiers • ":" typename

    ","  shift, and go to state 123
    ":"  shift, and go to state 219


State 193

   77 sub_header: "function" "id" formal_parameters ":" standard_type •

    $default  reduce using rule 77 (sub_header)


State 194

  105 if_statement: "if" expression "then" statement • if_tail

    "else"  shift, and go to state 220

    $default  reduce using rule 107 (if_tail)

    if_tail  go to state 221


State 195

  108 while_statement: "while" expression "do" statement •

    $default  reduce using rule 108 (while_statement)


State 196

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression
  110 iter_space: expression • "to" expression
  111           | expression • "downto" expression

    "downto"                       shift, and go to state 222
    "to"                           shift, and go to state 223
    "> or >= or < or <= or <>"     shift, and go to state 84
    "+ or -"                       shift, and go to state 85
    "or"                           shift, and go to state 86
    "* or / or div or mod or and"  shift, and go to state 87
    "in"                           shift, and go to state 88
    "="                            shift, and go to state 89


State 197

  109 for_statement: "for" "id" ":=" iter_space • "do" statement

    "do"  shift, and go to state 224


State 198

  112 with_statement: "with" variable "do" statement •

    $default  reduce using rule 112 (with_statement)


State 199

  115 io_statement: "read" "(" read_list ")" •

    $default  reduce using rule 115 (io_statement)


State 200

  117 read_list: read_list "," • read_item

    "id"  shift, and go to state 100

    variable   go to state 151
    read_item  go to state 225


State 201

  116 io_statement: "write" "(" write_list ")" •

    $default  reduce using rule 116 (io_statement)


State 202

  120 write_list: write_list "," • write_item

    "id"      shift, and go to state 33
    "iconst"  shift, and go to state 34
    "rconst"  shift, and go to state 35
    "bconst"  shift, and go to state 36
    "cconst"  shift, and go to state 37
    "+ or -"  shift, and go to state 38
    "not"     shift, and go to state 39
    "string"  shift, and go to state 154
    "("       shift, and go to state 40
    "["       shift, and go to state 41

    expression     go to state 155
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45
    write_item     go to state 226


State 203

  114 subprogram_call: "id" "(" expressions ")" •

    $default  reduce using rule 114 (subprogram_call)


State 204

   76 subprogram: sub_header ";" declarations subprograms comp_statement •

    $default  reduce using rule 76 (subprogram)


State 205

   51 limits: "id" •
   57 limit: "id" •

    ".."      reduce using rule 57 (limit)
    $default  reduce using rule 51 (limits)


State 206

   43 type_def: "array" "[" dims • "]" "of" typename
   48 dims: dims • "," limits

    ","  shift, and go to state 227
    "]"  shift, and go to state 228


State 207

   49 dims: limits •

    $default  reduce using rule 49 (dims)


State 208

   50 limits: limit • ".." limit

    ".."  shift, and go to state 229


State 209

   44 type_def: "set" "of" typename •

    $default  reduce using rule 44 (type_def)


State 210

   45 type_def: "record" fields "end" •

    $default  reduce using rule 45 (type_def)


State 211

   64 fields: fields ";" • field

    "id"  shift, and go to state 73

    field        go to state 230
    identifiers  go to state 170


State 212

   66 field: identifiers ":" • typename

    "integer"  shift, and go to state 177
    "real"     shift, and go to state 178
    "boolean"  shift, and go to state 179
    "char"     shift, and go to state 180
    "id"       shift, and go to state 181

    typename       go to state 231
    standard_type  go to state 183


State 213

   46 type_def: "(" identifiers ")" •

    $default  reduce using rule 46 (type_def)


State 214

   47 type_def: limit ".." limit •

    $default  reduce using rule 47 (type_def)


State 215

   41 type_defs: type_defs ";" "id" "=" type_def •

    $default  reduce using rule 41 (type_defs)


State 216

   71 variable_defs: variable_defs ";" identifiers ":" • typename

    "integer"  shift, and go to state 177
    "real"     shift, and go to state 178
    "boolean"  shift, and go to state 179
    "char"     shift, and go to state 180
    "id"       shift, and go to state 181

    typename       go to state 232
    standard_type  go to state 183


State 217

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression
   27 expressions: expressions "," expression •

    "> or >= or < or <= or <>"     shift, and go to state 84
    "+ or -"                       shift, and go to state 85
    "or"                           shift, and go to state 86
    "* or / or div or mod or and"  shift, and go to state 87
    "in"                           shift, and go to state 88
    "="                            shift, and go to state 89

    $default  reduce using rule 27 (expressions)


State 218

   82 parameter_list: parameter_list ";" pass • identifiers ":" typename

    "id"  shift, and go to state 73

    identifiers  go to state 233


State 219

   83 parameter_list: pass identifiers ":" • typename

    "integer"  shift, and go to state 177
    "real"     shift, and go to state 178
    "boolean"  shift, and go to state 179
    "char"     shift, and go to state 180
    "id"       shift, and go to state 181

    typename       go to state 234
    standard_type  go to state 183


State 220

  106 if_tail: "else" • statement

    error    shift, and go to state 49
    "begin"  shift, and go to state 25
    "if"     shift, and go to state 50
    "while"  shift, and go to state 51
    "for"    shift, and go to state 52
    "with"   shift, and go to state 53
    "read"   shift, and go to state 54
    "write"  shift, and go to state 55
    "id"     shift, and go to state 56

    "end"   reduce using rule 97 (statement)
    "else"  reduce using rule 97 (statement)
    ";"     reduce using rule 97 (statement)

    variable         go to state 57
    comp_statement   go to state 58
    statement        go to state 235
    assignment       go to state 61
    if_statement     go to state 62
    while_statement  go to state 63
    for_statement    go to state 64
    with_statement   go to state 65
    subprogram_call  go to state 66
    io_statement     go to state 67


State 221

  105 if_statement: "if" expression "then" statement if_tail •

    $default  reduce using rule 105 (if_statement)


State 222

  111 iter_space: expression "downto" • expression

    "id"      shift, and go to state 33
    "iconst"  shift, and go to state 34
    "rconst"  shift, and go to state 35
    "bconst"  shift, and go to state 36
    "cconst"  shift, and go to state 37
    "+ or -"  shift, and go to state 38
    "not"     shift, and go to state 39
    "("       shift, and go to state 40
    "["       shift, and go to state 41

    expression     go to state 236
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 223

  110 iter_space: expression "to" • expression

    "id"      shift, and go to state 33
    "iconst"  shift, and go to state 34
    "rconst"  shift, and go to state 35
    "bconst"  shift, and go to state 36
    "cconst"  shift, and go to state 37
    "+ or -"  shift, and go to state 38
    "not"     shift, and go to state 39
    "("       shift, and go to state 40
    "["       shift, and go to state 41

    expression     go to state 237
    variable       go to state 43
    constant       go to state 44
    setexpression  go to state 45


State 224

  109 for_statement: "for" "id" ":=" iter_space "do" • statement

    error    shift, and go to state 49
    "begin"  shift, and go to state 25
    "if"     shift, and go to state 50
    "while"  shift, and go to state 51
    "for"    shift, and go to state 52
    "with"   shift, and go to state 53
    "read"   shift, and go to state 54
    "write"  shift, and go to state 55
    "id"     shift, and go to state 56

    "end"   reduce using rule 97 (statement)
    "else"  reduce using rule 97 (statement)
    ";"     reduce using rule 97 (statement)

    variable         go to state 57
    comp_statement   go to state 58
    statement        go to state 238
    assignment       go to state 61
    if_statement     go to state 62
    while_statement  go to state 63
    for_statement    go to state 64
    with_statement   go to state 65
    subprogram_call  go to state 66
    io_statement     go to state 67


State 225

  117 read_list: read_list "," read_item •

    $default  reduce using rule 117 (read_list)


State 226

  120 write_list: write_list "," write_item •

    $default  reduce using rule 120 (write_list)


State 227

   48 dims: dims "," • limits

    "id"      shift, and go to state 205
    "iconst"  shift, and go to state 115
    "bconst"  shift, and go to state 116
    "cconst"  shift, and go to state 117
    "+ or -"  shift, and go to state 118

    limits  go to state 239
    limit   go to state 208


State 228

   43 type_def: "array" "[" dims "]" • "of" typename

    "of"  shift, and go to state 240


State 229

   50 limits: limit ".." • limit

    "id"      shift, and go to state 114
    "iconst"  shift, and go to state 115
    "bconst"  shift, and go to state 116
    "cconst"  shift, and go to state 117
    "+ or -"  shift, and go to state 118

    limit  go to state 241


State 230

   64 fields: fields ";" field •

    $default  reduce using rule 64 (fields)


State 231

   66 field: identifiers ":" typename •

    $default  reduce using rule 66 (field)


State 232

   71 variable_defs: variable_defs ";" identifiers ":" typename •

    $default  reduce using rule 71 (variable_defs)


State 233

   67 identifiers: identifiers • "," "id"
   82 parameter_list: parameter_list ";" pass identifiers • ":" typename

    ","  shift, and go to state 123
    ":"  shift, and go to state 242


State 234

   83 parameter_list: pass identifiers ":" typename •

    $default  reduce using rule 83 (parameter_list)


State 235

  106 if_tail: "else" statement •

    $default  reduce using rule 106 (if_tail)


State 236

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression
  111 iter_space: expression "downto" expression •

    "> or >= or < or <= or <>"     shift, and go to state 84
    "+ or -"                       shift, and go to state 85
    "or"                           shift, and go to state 86
    "* or / or div or mod or and"  shift, and go to state 87
    "in"                           shift, and go to state 88
    "="                            shift, and go to state 89

    $default  reduce using rule 111 (iter_space)


State 237

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression
  110 iter_space: expression "to" expression •

    "> or >= or < or <= or <>"     shift, and go to state 84
    "+ or -"                       shift, and go to state 85
    "or"                           shift, and go to state 86
    "* or / or div or mod or and"  shift, and go to state 87
    "in"                           shift, and go to state 88
    "="                            shift, and go to state 89

    $default  reduce using rule 110 (iter_space)


State 238

  109 for_statement: "for" "id" ":=" iter_space "do" statement •

    $default  reduce using rule 109 (for_statement)


State 239

   48 dims: dims "," limits •

    $default  reduce using rule 48 (dims)


State 240

   43 type_def: "array" "[" dims "]" "of" • typename

    "integer"  shift, and go to state 177
    "real"     shift, and go to state 178
    "boolean"  shift, and go to state 179
    "char"     shift, and go to state 180
    "id"       shift, and go to state 181

    typename       go to state 243
    standard_type  go to state 183


State 241

   50 limits: limit ".." limit •

    $default  reduce using rule 50 (limits)


State 242

   82 parameter_list: parameter_list ";" pass identifiers ":" • typename

    "integer"  shift, and go to state 177
    "real"     shift, and go to state 178
    "boolean"  shift, and go to state 179
    "char"     shift, and go to state 180
    "id"       shift, and go to state 181

    typename       go to state 244
    standard_type  go to state 183


State 243

   43 type_def: "array" "[" dims "]" "of" typename •

    $default  reduce using rule 43 (type_def)


State 244

   82 parameter_list: parameter_list ";" pass identifiers ":" typename •

    $default  reduce using rule 82 (parameter_list)
