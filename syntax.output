State 85 conflicts: 3 shift/reduce
State 136 conflicts: 10 reduce/reduce


Grammar

    0 $accept: program "EOF"

    1 program: header declarations subprograms comp_statement "."

    2 header: "program" "id" ";"
    3       | error "id" ";"
    4       | "program" error ";"
    5       | "program" "id" error

    6 declarations: constdefs typedefs vardefs

    7 constdefs: "const" constant_defs ";"
    8          | %empty

    9 constant_defs: constant_defs ";" "id" "=" expression
   10              | "id" "=" expression

   11 expression: expression "> or >= or < or <= or <>" expression
   12           | expression "=" expression
   13           | expression "in" expression
   14           | expression "or" expression
   15           | expression "+ or -" expression
   16           | expression "* or / or div or mod or and" expression
   17           | "+ or -" expression
   18           | "not" expression
   19           | variable
   20           | "id" "(" expressions ")"
   21           | constant
   22           | "(" expression ")"
   23           | setexpression

   24 variable: "id"
   25         | variable "." "id"
   26         | variable "[" expressions "]"

   27 expressions: expressions "," expression
   28            | expression

   29 constant: "iconst"
   30         | "rconst"
   31         | "bconst"
   32         | "cconst"

   33 setexpression: "[" elexpressions "]"
   34              | "[" "]"
   35              | error elexpressions "]"
   36              | "[" error "]"
   37              | "[" elexpressions error
   38              | error "]"
   39              | "[" error

   40 elexpressions: elexpressions "," elexpression
   41              | elexpression

   42 elexpression: expression ".." expression
   43             | expression

   44 typedefs: "type" type_defs ";"
   45         | %empty

   46 type_defs: type_defs ";" "id" "=" type_def
   47          | "id" "=" type_def

   48 type_def: "array" "[" dims "]" "of" typename
   49         | "set" "of" typename
   50         | "record" fields "end"
   51         | "(" identifiers ")"
   52         | limit ".." limit

   53 dims: dims "," limits
   54     | limits

   55 limits: limit ".." limit
   56       | "id"

   57 limit: "+ or -" "iconst"
   58      | "+ or -" "id"
   59      | "iconst"
   60      | "cconst"
   61      | "bconst"
   62      | "id"

   63 typename: standard_type
   64         | "id"

   65 standard_type: "integer"
   66              | "real"
   67              | "boolean"
   68              | "char"

   69 fields: fields ";" field
   70       | field

   71 field: identifiers ":" typename

   72 identifiers: identifiers "," "id"
   73            | "id"

   74 vardefs: "var" variable_defs ";"
   75        | %empty

   76 variable_defs: variable_defs ";" identifiers ":" typename
   77              | identifiers ":" typename

   78 subprograms: subprograms subprogram ";"
   79            | %empty

   80 subprogram: sub_header ";" "forward"
   81           | sub_header ";" declarations subprograms comp_statement

   82 sub_header: "function" "id" formal_parameters ":" standard_type
   83           | "procedure" "id" formal_parameters
   84           | "function" "id"

   85 formal_parameters: "(" parameter_list ")"
   86                  | %empty

   87 parameter_list: parameter_list ";" pass identifiers ":" typename
   88               | pass identifiers ":" typename

   89 pass: "var"
   90     | %empty

   91 comp_statement: "begin" statements "end"

   92 statements: statements ";" statement
   93           | statement

   94 statement: assignment
   95          | if_statement
   96          | while_statement
   97          | for_statement
   98          | with_statement
   99          | subprogram_call
  100          | io_statement
  101          | comp_statement
  102          | %empty

  103 assignment: variable ":=" expression
  104           | variable ":=" "string"
  105           | error ":=" expression
  106           | variable error expression
  107           | error ":=" "string"
  108           | variable error "string"
  109           | variable ":=" error

  110 if_statement: "if" expression "then" statement if_tail

  111 if_tail: "else" statement
  112        | %empty

  113 while_statement: "while" expression "do" statement

  114 for_statement: "for" "id" ":=" iter_space "do" statement

  115 iter_space: expression "to" expression
  116           | expression "downto" expression

  117 with_statement: "with" variable "do" statement

  118 subprogram_call: "id"
  119                | "id" "(" expressions ")"

  120 io_statement: "read" "(" read_list ")"
  121             | "write" "(" write_list ")"

  122 read_list: read_list "," read_item
  123          | read_item

  124 read_item: variable

  125 write_list: write_list "," write_item
  126           | write_item

  127 write_item: expression
  128           | "string"


Terminals, with rules where they appear

    "EOF" (0) 0
    error (256) 3 4 5 35 36 37 38 39 105 106 107 108 109
    "program" (258) 2 4 5
    "const" (259) 7
    "type" (260) 44
    "array" (261) 48
    "set" (262) 49
    "of" (263) 48 49
    "record" (264) 50
    "var" (265) 74 89
    "forward" (266) 80
    "function" (267) 82 84
    "procedure" (268) 83
    "integer" (269) 65
    "real" (270) 66
    "boolean" (271) 67
    "char" (272) 68
    "begin" (273) 91
    "end" (274) 50 91
    "if" (275) 110
    "then" (276) 110
    "else" (277) 111
    "while" (278) 113
    "do" (279) 113 114 117
    "for" (280) 114
    "downto" (281) 116
    "to" (282) 115
    "with" (283) 117
    "read" (284) 120
    "write" (285) 121
    "id" <strval> (286) 2 3 5 9 10 20 24 25 46 47 56 58 62 64 72 73 82 83 84 114 118 119
    "iconst" <intval> (287) 29 57 59
    "rconst" <floatval> (288) 30
    "bconst" <boolean> (289) 31 61
    "cconst" <charval> (290) 32 60
    "> or >= or < or <= or <>" (291) 11
    "+ or -" (292) 15 17 57 58
    "or" (293) 14
    "* or / or div or mod or and" (294) 16
    "not" (295) 18
    "in" (296) 13
    "string" (297) 104 107 108 128
    "(" (298) 20 22 51 85 119 120 121
    ")" (299) 20 22 51 85 119 120 121
    ";" (300) 2 3 4 7 9 44 46 69 74 76 78 80 81 87 92
    "." (301) 1 25
    "," (302) 27 40 53 72 122 125
    "=" (303) 9 10 12 46 47
    ":" (304) 71 76 77 82 87 88
    "[" (305) 26 33 34 36 37 39 48
    "]" (306) 26 33 34 35 36 38 48
    ":=" (307) 103 104 105 107 109 114
    ".." (308) 42 52 55
    LOWER_THAN_ELSE (309)


Nonterminals, with rules where they appear

    $accept (55)
        on left: 0
    program <strval> (56)
        on left: 1
        on right: 0
    header <strval> (57)
        on left: 2 3 4 5
        on right: 1
    declarations <strval> (58)
        on left: 6
        on right: 1 81
    constdefs <strval> (59)
        on left: 7 8
        on right: 6
    constant_defs <strval> (60)
        on left: 9 10
        on right: 7 9
    expression <strval> (61)
        on left: 11 12 13 14 15 16 17 18 19 20 21 22 23
        on right: 9 10 11 12 13 14 15 16 17 18 22 27 28 42 43 103 105 106 110 113 115 116 127
    variable <strval> (62)
        on left: 24 25 26
        on right: 19 25 26 103 104 106 108 109 117 124
    expressions <strval> (63)
        on left: 27 28
        on right: 20 26 27 119
    constant <strval> (64)
        on left: 29 30 31 32
        on right: 21
    setexpression <strval> (65)
        on left: 33 34 35 36 37 38 39
        on right: 23
    elexpressions <strval> (66)
        on left: 40 41
        on right: 33 35 37 40
    elexpression <strval> (67)
        on left: 42 43
        on right: 40 41
    typedefs <strval> (68)
        on left: 44 45
        on right: 6
    type_defs <strval> (69)
        on left: 46 47
        on right: 44 46
    type_def <strval> (70)
        on left: 48 49 50 51 52
        on right: 46 47
    dims <strval> (71)
        on left: 53 54
        on right: 48 53
    limits <strval> (72)
        on left: 55 56
        on right: 53 54
    limit <strval> (73)
        on left: 57 58 59 60 61 62
        on right: 52 55
    typename <strval> (74)
        on left: 63 64
        on right: 48 49 71 76 77 87 88
    standard_type <strval> (75)
        on left: 65 66 67 68
        on right: 63 82
    fields <strval> (76)
        on left: 69 70
        on right: 50 69
    field <strval> (77)
        on left: 71
        on right: 69 70
    identifiers <strval> (78)
        on left: 72 73
        on right: 51 71 72 76 77 87 88
    vardefs <strval> (79)
        on left: 74 75
        on right: 6
    variable_defs <strval> (80)
        on left: 76 77
        on right: 74 76
    subprograms <strval> (81)
        on left: 78 79
        on right: 1 78 81
    subprogram <strval> (82)
        on left: 80 81
        on right: 78
    sub_header <strval> (83)
        on left: 82 83 84
        on right: 80 81
    formal_parameters <strval> (84)
        on left: 85 86
        on right: 82 83
    parameter_list <strval> (85)
        on left: 87 88
        on right: 85 87
    pass <strval> (86)
        on left: 89 90
        on right: 87 88
    comp_statement <strval> (87)
        on left: 91
        on right: 1 81 101
    statements <strval> (88)
        on left: 92 93
        on right: 91 92
    statement <strval> (89)
        on left: 94 95 96 97 98 99 100 101 102
        on right: 92 93 110 111 113 114 117
    assignment <strval> (90)
        on left: 103 104 105 106 107 108 109
        on right: 94
    if_statement <strval> (91)
        on left: 110
        on right: 95
    if_tail <strval> (92)
        on left: 111 112
        on right: 110
    while_statement <strval> (93)
        on left: 113
        on right: 96
    for_statement <strval> (94)
        on left: 114
        on right: 97
    iter_space <strval> (95)
        on left: 115 116
        on right: 114
    with_statement <strval> (96)
        on left: 117
        on right: 98
    subprogram_call <strval> (97)
        on left: 118 119
        on right: 99
    io_statement <strval> (98)
        on left: 120 121
        on right: 100
    read_list <strval> (99)
        on left: 122 123
        on right: 120 122
    read_item <strval> (100)
        on left: 124
        on right: 122 123
    write_list <strval> (101)
        on left: 125 126
        on right: 121 125
    write_item <strval> (102)
        on left: 127 128
        on right: 125 126


State 0

    0 $accept: • program "EOF"

    error      shift, and go to state 1
    "program"  shift, and go to state 2

    program  go to state 3
    header   go to state 4


State 1

    3 header: error • "id" ";"

    "id"  shift, and go to state 5


State 2

    2 header: "program" • "id" ";"
    4       | "program" • error ";"
    5       | "program" • "id" error

    error  shift, and go to state 6
    "id"   shift, and go to state 7


State 3

    0 $accept: program • "EOF"

    "EOF"  shift, and go to state 8


State 4

    1 program: header • declarations subprograms comp_statement "."

    "const"  shift, and go to state 9

    $default  reduce using rule 8 (constdefs)

    declarations  go to state 10
    constdefs     go to state 11


State 5

    3 header: error "id" • ";"

    ";"  shift, and go to state 12


State 6

    4 header: "program" error • ";"

    ";"  shift, and go to state 13


State 7

    2 header: "program" "id" • ";"
    5       | "program" "id" • error

    error  shift, and go to state 14
    ";"    shift, and go to state 15


State 8

    0 $accept: program "EOF" •

    $default  accept


State 9

    7 constdefs: "const" • constant_defs ";"

    "id"  shift, and go to state 16

    constant_defs  go to state 17


State 10

    1 program: header declarations • subprograms comp_statement "."

    $default  reduce using rule 79 (subprograms)

    subprograms  go to state 18


State 11

    6 declarations: constdefs • typedefs vardefs

    "type"  shift, and go to state 19

    $default  reduce using rule 45 (typedefs)

    typedefs  go to state 20


State 12

    3 header: error "id" ";" •

    $default  reduce using rule 3 (header)


State 13

    4 header: "program" error ";" •

    $default  reduce using rule 4 (header)


State 14

    5 header: "program" "id" error •

    $default  reduce using rule 5 (header)


State 15

    2 header: "program" "id" ";" •

    $default  reduce using rule 2 (header)


State 16

   10 constant_defs: "id" • "=" expression

    "="  shift, and go to state 21


State 17

    7 constdefs: "const" constant_defs • ";"
    9 constant_defs: constant_defs • ";" "id" "=" expression

    ";"  shift, and go to state 22


State 18

    1 program: header declarations subprograms • comp_statement "."
   78 subprograms: subprograms • subprogram ";"

    "function"   shift, and go to state 23
    "procedure"  shift, and go to state 24
    "begin"      shift, and go to state 25

    subprogram      go to state 26
    sub_header      go to state 27
    comp_statement  go to state 28


State 19

   44 typedefs: "type" • type_defs ";"

    "id"  shift, and go to state 29

    type_defs  go to state 30


State 20

    6 declarations: constdefs typedefs • vardefs

    "var"  shift, and go to state 31

    $default  reduce using rule 75 (vardefs)

    vardefs  go to state 32


State 21

   10 constant_defs: "id" "=" • expression

    error     shift, and go to state 33
    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 43
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 22

    7 constdefs: "const" constant_defs ";" •
    9 constant_defs: constant_defs ";" • "id" "=" expression

    "id"  shift, and go to state 47

    $default  reduce using rule 7 (constdefs)


State 23

   82 sub_header: "function" • "id" formal_parameters ":" standard_type
   84           | "function" • "id"

    "id"  shift, and go to state 48


State 24

   83 sub_header: "procedure" • "id" formal_parameters

    "id"  shift, and go to state 49


State 25

   91 comp_statement: "begin" • statements "end"

    error    shift, and go to state 50
    "begin"  shift, and go to state 25
    "if"     shift, and go to state 51
    "while"  shift, and go to state 52
    "for"    shift, and go to state 53
    "with"   shift, and go to state 54
    "read"   shift, and go to state 55
    "write"  shift, and go to state 56
    "id"     shift, and go to state 57

    "end"  reduce using rule 102 (statement)
    ";"    reduce using rule 102 (statement)

    variable         go to state 58
    comp_statement   go to state 59
    statements       go to state 60
    statement        go to state 61
    assignment       go to state 62
    if_statement     go to state 63
    while_statement  go to state 64
    for_statement    go to state 65
    with_statement   go to state 66
    subprogram_call  go to state 67
    io_statement     go to state 68


State 26

   78 subprograms: subprograms subprogram • ";"

    ";"  shift, and go to state 69


State 27

   80 subprogram: sub_header • ";" "forward"
   81           | sub_header • ";" declarations subprograms comp_statement

    ";"  shift, and go to state 70


State 28

    1 program: header declarations subprograms comp_statement • "."

    "."  shift, and go to state 71


State 29

   47 type_defs: "id" • "=" type_def

    "="  shift, and go to state 72


State 30

   44 typedefs: "type" type_defs • ";"
   46 type_defs: type_defs • ";" "id" "=" type_def

    ";"  shift, and go to state 73


State 31

   74 vardefs: "var" • variable_defs ";"

    "id"  shift, and go to state 74

    identifiers    go to state 75
    variable_defs  go to state 76


State 32

    6 declarations: constdefs typedefs vardefs •

    $default  reduce using rule 6 (declarations)


State 33

   35 setexpression: error • elexpressions "]"
   38              | error • "]"

    error     shift, and go to state 33
    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42
    "]"       shift, and go to state 77

    expression     go to state 78
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46
    elexpressions  go to state 79
    elexpression   go to state 80


State 34

   20 expression: "id" • "(" expressions ")"
   24 variable: "id" •

    "("  shift, and go to state 81

    $default  reduce using rule 24 (variable)


State 35

   29 constant: "iconst" •

    $default  reduce using rule 29 (constant)


State 36

   30 constant: "rconst" •

    $default  reduce using rule 30 (constant)


State 37

   31 constant: "bconst" •

    $default  reduce using rule 31 (constant)


State 38

   32 constant: "cconst" •

    $default  reduce using rule 32 (constant)


State 39

   17 expression: "+ or -" • expression

    error     shift, and go to state 33
    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 82
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 40

   18 expression: "not" • expression

    error     shift, and go to state 33
    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 83
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 41

   22 expression: "(" • expression ")"

    error     shift, and go to state 33
    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 84
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 42

   33 setexpression: "[" • elexpressions "]"
   34              | "[" • "]"
   36              | "[" • error "]"
   37              | "[" • elexpressions error
   39              | "[" • error

    error     shift, and go to state 85
    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42
    "]"       shift, and go to state 86

    expression     go to state 78
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46
    elexpressions  go to state 87
    elexpression   go to state 80


State 43

   10 constant_defs: "id" "=" expression •
   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression

    "> or >= or < or <= or <>"     shift, and go to state 88
    "+ or -"                       shift, and go to state 89
    "or"                           shift, and go to state 90
    "* or / or div or mod or and"  shift, and go to state 91
    "in"                           shift, and go to state 92
    "="                            shift, and go to state 93

    $default  reduce using rule 10 (constant_defs)


State 44

   19 expression: variable •
   25 variable: variable • "." "id"
   26         | variable • "[" expressions "]"

    "."  shift, and go to state 94
    "["  shift, and go to state 95

    $default  reduce using rule 19 (expression)


State 45

   21 expression: constant •

    $default  reduce using rule 21 (expression)


State 46

   23 expression: setexpression •

    $default  reduce using rule 23 (expression)


State 47

    9 constant_defs: constant_defs ";" "id" • "=" expression

    "="  shift, and go to state 96


State 48

   82 sub_header: "function" "id" • formal_parameters ":" standard_type
   84           | "function" "id" •

    "("  shift, and go to state 97

    ":"       reduce using rule 86 (formal_parameters)
    $default  reduce using rule 84 (sub_header)

    formal_parameters  go to state 98


State 49

   83 sub_header: "procedure" "id" • formal_parameters

    "("  shift, and go to state 97

    $default  reduce using rule 86 (formal_parameters)

    formal_parameters  go to state 99


State 50

  105 assignment: error • ":=" expression
  107           | error • ":=" "string"

    ":="  shift, and go to state 100


State 51

  110 if_statement: "if" • expression "then" statement if_tail

    error     shift, and go to state 33
    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 101
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 52

  113 while_statement: "while" • expression "do" statement

    error     shift, and go to state 33
    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 102
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 53

  114 for_statement: "for" • "id" ":=" iter_space "do" statement

    "id"  shift, and go to state 103


State 54

  117 with_statement: "with" • variable "do" statement

    "id"  shift, and go to state 104

    variable  go to state 105


State 55

  120 io_statement: "read" • "(" read_list ")"

    "("  shift, and go to state 106


State 56

  121 io_statement: "write" • "(" write_list ")"

    "("  shift, and go to state 107


State 57

   24 variable: "id" •
  118 subprogram_call: "id" •
  119                | "id" • "(" expressions ")"

    "("  shift, and go to state 108

    "end"     reduce using rule 118 (subprogram_call)
    "else"    reduce using rule 118 (subprogram_call)
    ";"       reduce using rule 118 (subprogram_call)
    $default  reduce using rule 24 (variable)


State 58

   25 variable: variable • "." "id"
   26         | variable • "[" expressions "]"
  103 assignment: variable • ":=" expression
  104           | variable • ":=" "string"
  106           | variable • error expression
  108           | variable • error "string"
  109           | variable • ":=" error

    error  shift, and go to state 109
    "."    shift, and go to state 94
    "["    shift, and go to state 95
    ":="   shift, and go to state 110


State 59

  101 statement: comp_statement •

    $default  reduce using rule 101 (statement)


State 60

   91 comp_statement: "begin" statements • "end"
   92 statements: statements • ";" statement

    "end"  shift, and go to state 111
    ";"    shift, and go to state 112


State 61

   93 statements: statement •

    $default  reduce using rule 93 (statements)


State 62

   94 statement: assignment •

    $default  reduce using rule 94 (statement)


State 63

   95 statement: if_statement •

    $default  reduce using rule 95 (statement)


State 64

   96 statement: while_statement •

    $default  reduce using rule 96 (statement)


State 65

   97 statement: for_statement •

    $default  reduce using rule 97 (statement)


State 66

   98 statement: with_statement •

    $default  reduce using rule 98 (statement)


State 67

   99 statement: subprogram_call •

    $default  reduce using rule 99 (statement)


State 68

  100 statement: io_statement •

    $default  reduce using rule 100 (statement)


State 69

   78 subprograms: subprograms subprogram ";" •

    $default  reduce using rule 78 (subprograms)


State 70

   80 subprogram: sub_header ";" • "forward"
   81           | sub_header ";" • declarations subprograms comp_statement

    "const"    shift, and go to state 9
    "forward"  shift, and go to state 113

    $default  reduce using rule 8 (constdefs)

    declarations  go to state 114
    constdefs     go to state 11


State 71

    1 program: header declarations subprograms comp_statement "." •

    $default  reduce using rule 1 (program)


State 72

   47 type_defs: "id" "=" • type_def

    "array"   shift, and go to state 115
    "set"     shift, and go to state 116
    "record"  shift, and go to state 117
    "id"      shift, and go to state 118
    "iconst"  shift, and go to state 119
    "bconst"  shift, and go to state 120
    "cconst"  shift, and go to state 121
    "+ or -"  shift, and go to state 122
    "("       shift, and go to state 123

    type_def  go to state 124
    limit     go to state 125


State 73

   44 typedefs: "type" type_defs ";" •
   46 type_defs: type_defs ";" • "id" "=" type_def

    "id"  shift, and go to state 126

    $default  reduce using rule 44 (typedefs)


State 74

   73 identifiers: "id" •

    $default  reduce using rule 73 (identifiers)


State 75

   72 identifiers: identifiers • "," "id"
   77 variable_defs: identifiers • ":" typename

    ","  shift, and go to state 127
    ":"  shift, and go to state 128


State 76

   74 vardefs: "var" variable_defs • ";"
   76 variable_defs: variable_defs • ";" identifiers ":" typename

    ";"  shift, and go to state 129


State 77

   38 setexpression: error "]" •

    $default  reduce using rule 38 (setexpression)


State 78

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression
   42 elexpression: expression • ".." expression
   43             | expression •

    "> or >= or < or <= or <>"     shift, and go to state 88
    "+ or -"                       shift, and go to state 89
    "or"                           shift, and go to state 90
    "* or / or div or mod or and"  shift, and go to state 91
    "in"                           shift, and go to state 92
    "="                            shift, and go to state 93
    ".."                           shift, and go to state 130

    $default  reduce using rule 43 (elexpression)


State 79

   35 setexpression: error elexpressions • "]"
   40 elexpressions: elexpressions • "," elexpression

    ","  shift, and go to state 131
    "]"  shift, and go to state 132


State 80

   41 elexpressions: elexpression •

    $default  reduce using rule 41 (elexpressions)


State 81

   20 expression: "id" "(" • expressions ")"

    error     shift, and go to state 33
    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 133
    variable       go to state 44
    expressions    go to state 134
    constant       go to state 45
    setexpression  go to state 46


State 82

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression
   17           | "+ or -" expression •

    "* or / or div or mod or and"  shift, and go to state 91

    $default  reduce using rule 17 (expression)


State 83

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression
   18           | "not" expression •

    $default  reduce using rule 18 (expression)


State 84

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression
   22           | "(" expression • ")"

    "> or >= or < or <= or <>"     shift, and go to state 88
    "+ or -"                       shift, and go to state 89
    "or"                           shift, and go to state 90
    "* or / or div or mod or and"  shift, and go to state 91
    "in"                           shift, and go to state 92
    ")"                            shift, and go to state 135
    "="                            shift, and go to state 93


State 85

   35 setexpression: error • elexpressions "]"
   36              | "[" error • "]"
   38              | error • "]"
   39              | "[" error •

    error     shift, and go to state 33
    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42
    "]"       shift, and go to state 136

    error                          [reduce using rule 39 (setexpression)]
    "end"                          reduce using rule 39 (setexpression)
    "then"                         reduce using rule 39 (setexpression)
    "else"                         reduce using rule 39 (setexpression)
    "do"                           reduce using rule 39 (setexpression)
    "downto"                       reduce using rule 39 (setexpression)
    "to"                           reduce using rule 39 (setexpression)
    "> or >= or < or <= or <>"     reduce using rule 39 (setexpression)
    "+ or -"                       [reduce using rule 39 (setexpression)]
    "or"                           reduce using rule 39 (setexpression)
    "* or / or div or mod or and"  reduce using rule 39 (setexpression)
    "in"                           reduce using rule 39 (setexpression)
    ")"                            reduce using rule 39 (setexpression)
    ";"                            reduce using rule 39 (setexpression)
    ","                            reduce using rule 39 (setexpression)
    "="                            reduce using rule 39 (setexpression)
    "]"                            [reduce using rule 39 (setexpression)]
    ".."                           reduce using rule 39 (setexpression)

    expression     go to state 78
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46
    elexpressions  go to state 79
    elexpression   go to state 80


State 86

   34 setexpression: "[" "]" •

    $default  reduce using rule 34 (setexpression)


State 87

   33 setexpression: "[" elexpressions • "]"
   37              | "[" elexpressions • error
   40 elexpressions: elexpressions • "," elexpression

    error  shift, and go to state 137
    ","    shift, and go to state 131
    "]"    shift, and go to state 138


State 88

   11 expression: expression "> or >= or < or <= or <>" • expression

    error     shift, and go to state 33
    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 139
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 89

   15 expression: expression "+ or -" • expression

    error     shift, and go to state 33
    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 140
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 90

   14 expression: expression "or" • expression

    error     shift, and go to state 33
    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 141
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 91

   16 expression: expression "* or / or div or mod or and" • expression

    error     shift, and go to state 33
    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 142
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 92

   13 expression: expression "in" • expression

    error     shift, and go to state 33
    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 143
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 93

   12 expression: expression "=" • expression

    error     shift, and go to state 33
    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 144
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 94

   25 variable: variable "." • "id"

    "id"  shift, and go to state 145


State 95

   26 variable: variable "[" • expressions "]"

    error     shift, and go to state 33
    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 133
    variable       go to state 44
    expressions    go to state 146
    constant       go to state 45
    setexpression  go to state 46


State 96

    9 constant_defs: constant_defs ";" "id" "=" • expression

    error     shift, and go to state 33
    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 147
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 97

   85 formal_parameters: "(" • parameter_list ")"

    "var"  shift, and go to state 148

    $default  reduce using rule 90 (pass)

    parameter_list  go to state 149
    pass            go to state 150


State 98

   82 sub_header: "function" "id" formal_parameters • ":" standard_type

    ":"  shift, and go to state 151


State 99

   83 sub_header: "procedure" "id" formal_parameters •

    $default  reduce using rule 83 (sub_header)


State 100

  105 assignment: error ":=" • expression
  107           | error ":=" • "string"

    error     shift, and go to state 33
    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "string"  shift, and go to state 152
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 153
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 101

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression
  110 if_statement: "if" expression • "then" statement if_tail

    "then"                         shift, and go to state 154
    "> or >= or < or <= or <>"     shift, and go to state 88
    "+ or -"                       shift, and go to state 89
    "or"                           shift, and go to state 90
    "* or / or div or mod or and"  shift, and go to state 91
    "in"                           shift, and go to state 92
    "="                            shift, and go to state 93


State 102

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression
  113 while_statement: "while" expression • "do" statement

    "do"                           shift, and go to state 155
    "> or >= or < or <= or <>"     shift, and go to state 88
    "+ or -"                       shift, and go to state 89
    "or"                           shift, and go to state 90
    "* or / or div or mod or and"  shift, and go to state 91
    "in"                           shift, and go to state 92
    "="                            shift, and go to state 93


State 103

  114 for_statement: "for" "id" • ":=" iter_space "do" statement

    ":="  shift, and go to state 156


State 104

   24 variable: "id" •

    $default  reduce using rule 24 (variable)


State 105

   25 variable: variable • "." "id"
   26         | variable • "[" expressions "]"
  117 with_statement: "with" variable • "do" statement

    "do"  shift, and go to state 157
    "."   shift, and go to state 94
    "["   shift, and go to state 95


State 106

  120 io_statement: "read" "(" • read_list ")"

    "id"  shift, and go to state 104

    variable   go to state 158
    read_list  go to state 159
    read_item  go to state 160


State 107

  121 io_statement: "write" "(" • write_list ")"

    error     shift, and go to state 33
    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "string"  shift, and go to state 161
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 162
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46
    write_list     go to state 163
    write_item     go to state 164


State 108

  119 subprogram_call: "id" "(" • expressions ")"

    error     shift, and go to state 33
    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 133
    variable       go to state 44
    expressions    go to state 165
    constant       go to state 45
    setexpression  go to state 46


State 109

  106 assignment: variable error • expression
  108           | variable error • "string"

    error     shift, and go to state 33
    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "string"  shift, and go to state 166
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 167
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 110

  103 assignment: variable ":=" • expression
  104           | variable ":=" • "string"
  109           | variable ":=" • error

    error     shift, and go to state 168
    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "string"  shift, and go to state 169
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 170
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 111

   91 comp_statement: "begin" statements "end" •

    $default  reduce using rule 91 (comp_statement)


State 112

   92 statements: statements ";" • statement

    error    shift, and go to state 50
    "begin"  shift, and go to state 25
    "if"     shift, and go to state 51
    "while"  shift, and go to state 52
    "for"    shift, and go to state 53
    "with"   shift, and go to state 54
    "read"   shift, and go to state 55
    "write"  shift, and go to state 56
    "id"     shift, and go to state 57

    "end"  reduce using rule 102 (statement)
    ";"    reduce using rule 102 (statement)

    variable         go to state 58
    comp_statement   go to state 59
    statement        go to state 171
    assignment       go to state 62
    if_statement     go to state 63
    while_statement  go to state 64
    for_statement    go to state 65
    with_statement   go to state 66
    subprogram_call  go to state 67
    io_statement     go to state 68


State 113

   80 subprogram: sub_header ";" "forward" •

    $default  reduce using rule 80 (subprogram)


State 114

   81 subprogram: sub_header ";" declarations • subprograms comp_statement

    $default  reduce using rule 79 (subprograms)

    subprograms  go to state 172


State 115

   48 type_def: "array" • "[" dims "]" "of" typename

    "["  shift, and go to state 173


State 116

   49 type_def: "set" • "of" typename

    "of"  shift, and go to state 174


State 117

   50 type_def: "record" • fields "end"

    "id"  shift, and go to state 74

    fields       go to state 175
    field        go to state 176
    identifiers  go to state 177


State 118

   62 limit: "id" •

    $default  reduce using rule 62 (limit)


State 119

   59 limit: "iconst" •

    $default  reduce using rule 59 (limit)


State 120

   61 limit: "bconst" •

    $default  reduce using rule 61 (limit)


State 121

   60 limit: "cconst" •

    $default  reduce using rule 60 (limit)


State 122

   57 limit: "+ or -" • "iconst"
   58      | "+ or -" • "id"

    "id"      shift, and go to state 178
    "iconst"  shift, and go to state 179


State 123

   51 type_def: "(" • identifiers ")"

    "id"  shift, and go to state 74

    identifiers  go to state 180


State 124

   47 type_defs: "id" "=" type_def •

    $default  reduce using rule 47 (type_defs)


State 125

   52 type_def: limit • ".." limit

    ".."  shift, and go to state 181


State 126

   46 type_defs: type_defs ";" "id" • "=" type_def

    "="  shift, and go to state 182


State 127

   72 identifiers: identifiers "," • "id"

    "id"  shift, and go to state 183


State 128

   77 variable_defs: identifiers ":" • typename

    "integer"  shift, and go to state 184
    "real"     shift, and go to state 185
    "boolean"  shift, and go to state 186
    "char"     shift, and go to state 187
    "id"       shift, and go to state 188

    typename       go to state 189
    standard_type  go to state 190


State 129

   74 vardefs: "var" variable_defs ";" •
   76 variable_defs: variable_defs ";" • identifiers ":" typename

    "id"  shift, and go to state 74

    $default  reduce using rule 74 (vardefs)

    identifiers  go to state 191


State 130

   42 elexpression: expression ".." • expression

    error     shift, and go to state 33
    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 192
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 131

   40 elexpressions: elexpressions "," • elexpression

    error     shift, and go to state 33
    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 78
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46
    elexpression   go to state 193


State 132

   35 setexpression: error elexpressions "]" •

    $default  reduce using rule 35 (setexpression)


State 133

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression
   28 expressions: expression •

    "> or >= or < or <= or <>"     shift, and go to state 88
    "+ or -"                       shift, and go to state 89
    "or"                           shift, and go to state 90
    "* or / or div or mod or and"  shift, and go to state 91
    "in"                           shift, and go to state 92
    "="                            shift, and go to state 93

    $default  reduce using rule 28 (expressions)


State 134

   20 expression: "id" "(" expressions • ")"
   27 expressions: expressions • "," expression

    ")"  shift, and go to state 194
    ","  shift, and go to state 195


State 135

   22 expression: "(" expression ")" •

    $default  reduce using rule 22 (expression)


State 136

   36 setexpression: "[" error "]" •
   38              | error "]" •

    error                          reduce using rule 36 (setexpression)
    error                          [reduce using rule 38 (setexpression)]
    "> or >= or < or <= or <>"     reduce using rule 36 (setexpression)
    "> or >= or < or <= or <>"     [reduce using rule 38 (setexpression)]
    "+ or -"                       reduce using rule 36 (setexpression)
    "+ or -"                       [reduce using rule 38 (setexpression)]
    "or"                           reduce using rule 36 (setexpression)
    "or"                           [reduce using rule 38 (setexpression)]
    "* or / or div or mod or and"  reduce using rule 36 (setexpression)
    "* or / or div or mod or and"  [reduce using rule 38 (setexpression)]
    "in"                           reduce using rule 36 (setexpression)
    "in"                           [reduce using rule 38 (setexpression)]
    ","                            reduce using rule 36 (setexpression)
    ","                            [reduce using rule 38 (setexpression)]
    "="                            reduce using rule 36 (setexpression)
    "="                            [reduce using rule 38 (setexpression)]
    "]"                            reduce using rule 36 (setexpression)
    "]"                            [reduce using rule 38 (setexpression)]
    ".."                           reduce using rule 36 (setexpression)
    ".."                           [reduce using rule 38 (setexpression)]
    $default                       reduce using rule 36 (setexpression)


State 137

   37 setexpression: "[" elexpressions error •

    $default  reduce using rule 37 (setexpression)


State 138

   33 setexpression: "[" elexpressions "]" •

    $default  reduce using rule 33 (setexpression)


State 139

   11 expression: expression • "> or >= or < or <= or <>" expression
   11           | expression "> or >= or < or <= or <>" expression •
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression

    "+ or -"                       shift, and go to state 89
    "or"                           shift, and go to state 90
    "* or / or div or mod or and"  shift, and go to state 91

    $default  reduce using rule 11 (expression)


State 140

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   15           | expression "+ or -" expression •
   16           | expression • "* or / or div or mod or and" expression

    "* or / or div or mod or and"  shift, and go to state 91

    $default  reduce using rule 15 (expression)


State 141

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   14           | expression "or" expression •
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression

    "* or / or div or mod or and"  shift, and go to state 91

    $default  reduce using rule 14 (expression)


State 142

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression
   16           | expression "* or / or div or mod or and" expression •

    $default  reduce using rule 16 (expression)


State 143

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   13           | expression "in" expression •
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression

    "+ or -"                       shift, and go to state 89
    "or"                           shift, and go to state 90
    "* or / or div or mod or and"  shift, and go to state 91

    $default  reduce using rule 13 (expression)


State 144

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   12           | expression "=" expression •
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression

    "+ or -"                       shift, and go to state 89
    "or"                           shift, and go to state 90
    "* or / or div or mod or and"  shift, and go to state 91

    $default  reduce using rule 12 (expression)


State 145

   25 variable: variable "." "id" •

    $default  reduce using rule 25 (variable)


State 146

   26 variable: variable "[" expressions • "]"
   27 expressions: expressions • "," expression

    ","  shift, and go to state 195
    "]"  shift, and go to state 196


State 147

    9 constant_defs: constant_defs ";" "id" "=" expression •
   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression

    "> or >= or < or <= or <>"     shift, and go to state 88
    "+ or -"                       shift, and go to state 89
    "or"                           shift, and go to state 90
    "* or / or div or mod or and"  shift, and go to state 91
    "in"                           shift, and go to state 92
    "="                            shift, and go to state 93

    $default  reduce using rule 9 (constant_defs)


State 148

   89 pass: "var" •

    $default  reduce using rule 89 (pass)


State 149

   85 formal_parameters: "(" parameter_list • ")"
   87 parameter_list: parameter_list • ";" pass identifiers ":" typename

    ")"  shift, and go to state 197
    ";"  shift, and go to state 198


State 150

   88 parameter_list: pass • identifiers ":" typename

    "id"  shift, and go to state 74

    identifiers  go to state 199


State 151

   82 sub_header: "function" "id" formal_parameters ":" • standard_type

    "integer"  shift, and go to state 184
    "real"     shift, and go to state 185
    "boolean"  shift, and go to state 186
    "char"     shift, and go to state 187

    standard_type  go to state 200


State 152

  107 assignment: error ":=" "string" •

    $default  reduce using rule 107 (assignment)


State 153

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression
  105 assignment: error ":=" expression •

    "> or >= or < or <= or <>"     shift, and go to state 88
    "+ or -"                       shift, and go to state 89
    "or"                           shift, and go to state 90
    "* or / or div or mod or and"  shift, and go to state 91
    "in"                           shift, and go to state 92
    "="                            shift, and go to state 93

    $default  reduce using rule 105 (assignment)


State 154

  110 if_statement: "if" expression "then" • statement if_tail

    error    shift, and go to state 50
    "begin"  shift, and go to state 25
    "if"     shift, and go to state 51
    "while"  shift, and go to state 52
    "for"    shift, and go to state 53
    "with"   shift, and go to state 54
    "read"   shift, and go to state 55
    "write"  shift, and go to state 56
    "id"     shift, and go to state 57

    "end"   reduce using rule 102 (statement)
    "else"  reduce using rule 102 (statement)
    ";"     reduce using rule 102 (statement)

    variable         go to state 58
    comp_statement   go to state 59
    statement        go to state 201
    assignment       go to state 62
    if_statement     go to state 63
    while_statement  go to state 64
    for_statement    go to state 65
    with_statement   go to state 66
    subprogram_call  go to state 67
    io_statement     go to state 68


State 155

  113 while_statement: "while" expression "do" • statement

    error    shift, and go to state 50
    "begin"  shift, and go to state 25
    "if"     shift, and go to state 51
    "while"  shift, and go to state 52
    "for"    shift, and go to state 53
    "with"   shift, and go to state 54
    "read"   shift, and go to state 55
    "write"  shift, and go to state 56
    "id"     shift, and go to state 57

    "end"   reduce using rule 102 (statement)
    "else"  reduce using rule 102 (statement)
    ";"     reduce using rule 102 (statement)

    variable         go to state 58
    comp_statement   go to state 59
    statement        go to state 202
    assignment       go to state 62
    if_statement     go to state 63
    while_statement  go to state 64
    for_statement    go to state 65
    with_statement   go to state 66
    subprogram_call  go to state 67
    io_statement     go to state 68


State 156

  114 for_statement: "for" "id" ":=" • iter_space "do" statement

    error     shift, and go to state 33
    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 203
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46
    iter_space     go to state 204


State 157

  117 with_statement: "with" variable "do" • statement

    error    shift, and go to state 50
    "begin"  shift, and go to state 25
    "if"     shift, and go to state 51
    "while"  shift, and go to state 52
    "for"    shift, and go to state 53
    "with"   shift, and go to state 54
    "read"   shift, and go to state 55
    "write"  shift, and go to state 56
    "id"     shift, and go to state 57

    "end"   reduce using rule 102 (statement)
    "else"  reduce using rule 102 (statement)
    ";"     reduce using rule 102 (statement)

    variable         go to state 58
    comp_statement   go to state 59
    statement        go to state 205
    assignment       go to state 62
    if_statement     go to state 63
    while_statement  go to state 64
    for_statement    go to state 65
    with_statement   go to state 66
    subprogram_call  go to state 67
    io_statement     go to state 68


State 158

   25 variable: variable • "." "id"
   26         | variable • "[" expressions "]"
  124 read_item: variable •

    "."  shift, and go to state 94
    "["  shift, and go to state 95

    $default  reduce using rule 124 (read_item)


State 159

  120 io_statement: "read" "(" read_list • ")"
  122 read_list: read_list • "," read_item

    ")"  shift, and go to state 206
    ","  shift, and go to state 207


State 160

  123 read_list: read_item •

    $default  reduce using rule 123 (read_list)


State 161

  128 write_item: "string" •

    $default  reduce using rule 128 (write_item)


State 162

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression
  127 write_item: expression •

    "> or >= or < or <= or <>"     shift, and go to state 88
    "+ or -"                       shift, and go to state 89
    "or"                           shift, and go to state 90
    "* or / or div or mod or and"  shift, and go to state 91
    "in"                           shift, and go to state 92
    "="                            shift, and go to state 93

    $default  reduce using rule 127 (write_item)


State 163

  121 io_statement: "write" "(" write_list • ")"
  125 write_list: write_list • "," write_item

    ")"  shift, and go to state 208
    ","  shift, and go to state 209


State 164

  126 write_list: write_item •

    $default  reduce using rule 126 (write_list)


State 165

   27 expressions: expressions • "," expression
  119 subprogram_call: "id" "(" expressions • ")"

    ")"  shift, and go to state 210
    ","  shift, and go to state 195


State 166

  108 assignment: variable error "string" •

    $default  reduce using rule 108 (assignment)


State 167

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression
  106 assignment: variable error expression •

    "> or >= or < or <= or <>"     shift, and go to state 88
    "+ or -"                       shift, and go to state 89
    "or"                           shift, and go to state 90
    "* or / or div or mod or and"  shift, and go to state 91
    "in"                           shift, and go to state 92
    "="                            shift, and go to state 93

    $default  reduce using rule 106 (assignment)


State 168

   35 setexpression: error • elexpressions "]"
   38              | error • "]"
  109 assignment: variable ":=" error •

    error     shift, and go to state 33
    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42
    "]"       shift, and go to state 77

    "end"   reduce using rule 109 (assignment)
    "else"  reduce using rule 109 (assignment)
    ";"     reduce using rule 109 (assignment)

    expression     go to state 78
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46
    elexpressions  go to state 79
    elexpression   go to state 80


State 169

  104 assignment: variable ":=" "string" •

    $default  reduce using rule 104 (assignment)


State 170

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression
  103 assignment: variable ":=" expression •

    "> or >= or < or <= or <>"     shift, and go to state 88
    "+ or -"                       shift, and go to state 89
    "or"                           shift, and go to state 90
    "* or / or div or mod or and"  shift, and go to state 91
    "in"                           shift, and go to state 92
    "="                            shift, and go to state 93

    $default  reduce using rule 103 (assignment)


State 171

   92 statements: statements ";" statement •

    $default  reduce using rule 92 (statements)


State 172

   78 subprograms: subprograms • subprogram ";"
   81 subprogram: sub_header ";" declarations subprograms • comp_statement

    "function"   shift, and go to state 23
    "procedure"  shift, and go to state 24
    "begin"      shift, and go to state 25

    subprogram      go to state 26
    sub_header      go to state 27
    comp_statement  go to state 211


State 173

   48 type_def: "array" "[" • dims "]" "of" typename

    "id"      shift, and go to state 212
    "iconst"  shift, and go to state 119
    "bconst"  shift, and go to state 120
    "cconst"  shift, and go to state 121
    "+ or -"  shift, and go to state 122

    dims    go to state 213
    limits  go to state 214
    limit   go to state 215


State 174

   49 type_def: "set" "of" • typename

    "integer"  shift, and go to state 184
    "real"     shift, and go to state 185
    "boolean"  shift, and go to state 186
    "char"     shift, and go to state 187
    "id"       shift, and go to state 188

    typename       go to state 216
    standard_type  go to state 190


State 175

   50 type_def: "record" fields • "end"
   69 fields: fields • ";" field

    "end"  shift, and go to state 217
    ";"    shift, and go to state 218


State 176

   70 fields: field •

    $default  reduce using rule 70 (fields)


State 177

   71 field: identifiers • ":" typename
   72 identifiers: identifiers • "," "id"

    ","  shift, and go to state 127
    ":"  shift, and go to state 219


State 178

   58 limit: "+ or -" "id" •

    $default  reduce using rule 58 (limit)


State 179

   57 limit: "+ or -" "iconst" •

    $default  reduce using rule 57 (limit)


State 180

   51 type_def: "(" identifiers • ")"
   72 identifiers: identifiers • "," "id"

    ")"  shift, and go to state 220
    ","  shift, and go to state 127


State 181

   52 type_def: limit ".." • limit

    "id"      shift, and go to state 118
    "iconst"  shift, and go to state 119
    "bconst"  shift, and go to state 120
    "cconst"  shift, and go to state 121
    "+ or -"  shift, and go to state 122

    limit  go to state 221


State 182

   46 type_defs: type_defs ";" "id" "=" • type_def

    "array"   shift, and go to state 115
    "set"     shift, and go to state 116
    "record"  shift, and go to state 117
    "id"      shift, and go to state 118
    "iconst"  shift, and go to state 119
    "bconst"  shift, and go to state 120
    "cconst"  shift, and go to state 121
    "+ or -"  shift, and go to state 122
    "("       shift, and go to state 123

    type_def  go to state 222
    limit     go to state 125


State 183

   72 identifiers: identifiers "," "id" •

    $default  reduce using rule 72 (identifiers)


State 184

   65 standard_type: "integer" •

    $default  reduce using rule 65 (standard_type)


State 185

   66 standard_type: "real" •

    $default  reduce using rule 66 (standard_type)


State 186

   67 standard_type: "boolean" •

    $default  reduce using rule 67 (standard_type)


State 187

   68 standard_type: "char" •

    $default  reduce using rule 68 (standard_type)


State 188

   64 typename: "id" •

    $default  reduce using rule 64 (typename)


State 189

   77 variable_defs: identifiers ":" typename •

    $default  reduce using rule 77 (variable_defs)


State 190

   63 typename: standard_type •

    $default  reduce using rule 63 (typename)


State 191

   72 identifiers: identifiers • "," "id"
   76 variable_defs: variable_defs ";" identifiers • ":" typename

    ","  shift, and go to state 127
    ":"  shift, and go to state 223


State 192

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression
   42 elexpression: expression ".." expression •

    "> or >= or < or <= or <>"     shift, and go to state 88
    "+ or -"                       shift, and go to state 89
    "or"                           shift, and go to state 90
    "* or / or div or mod or and"  shift, and go to state 91
    "in"                           shift, and go to state 92
    "="                            shift, and go to state 93

    $default  reduce using rule 42 (elexpression)


State 193

   40 elexpressions: elexpressions "," elexpression •

    $default  reduce using rule 40 (elexpressions)


State 194

   20 expression: "id" "(" expressions ")" •

    $default  reduce using rule 20 (expression)


State 195

   27 expressions: expressions "," • expression

    error     shift, and go to state 33
    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 224
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 196

   26 variable: variable "[" expressions "]" •

    $default  reduce using rule 26 (variable)


State 197

   85 formal_parameters: "(" parameter_list ")" •

    $default  reduce using rule 85 (formal_parameters)


State 198

   87 parameter_list: parameter_list ";" • pass identifiers ":" typename

    "var"  shift, and go to state 148

    $default  reduce using rule 90 (pass)

    pass  go to state 225


State 199

   72 identifiers: identifiers • "," "id"
   88 parameter_list: pass identifiers • ":" typename

    ","  shift, and go to state 127
    ":"  shift, and go to state 226


State 200

   82 sub_header: "function" "id" formal_parameters ":" standard_type •

    $default  reduce using rule 82 (sub_header)


State 201

  110 if_statement: "if" expression "then" statement • if_tail

    "else"  shift, and go to state 227

    $default  reduce using rule 112 (if_tail)

    if_tail  go to state 228


State 202

  113 while_statement: "while" expression "do" statement •

    $default  reduce using rule 113 (while_statement)


State 203

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression
  115 iter_space: expression • "to" expression
  116           | expression • "downto" expression

    "downto"                       shift, and go to state 229
    "to"                           shift, and go to state 230
    "> or >= or < or <= or <>"     shift, and go to state 88
    "+ or -"                       shift, and go to state 89
    "or"                           shift, and go to state 90
    "* or / or div or mod or and"  shift, and go to state 91
    "in"                           shift, and go to state 92
    "="                            shift, and go to state 93


State 204

  114 for_statement: "for" "id" ":=" iter_space • "do" statement

    "do"  shift, and go to state 231


State 205

  117 with_statement: "with" variable "do" statement •

    $default  reduce using rule 117 (with_statement)


State 206

  120 io_statement: "read" "(" read_list ")" •

    $default  reduce using rule 120 (io_statement)


State 207

  122 read_list: read_list "," • read_item

    "id"  shift, and go to state 104

    variable   go to state 158
    read_item  go to state 232


State 208

  121 io_statement: "write" "(" write_list ")" •

    $default  reduce using rule 121 (io_statement)


State 209

  125 write_list: write_list "," • write_item

    error     shift, and go to state 33
    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "string"  shift, and go to state 161
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 162
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46
    write_item     go to state 233


State 210

  119 subprogram_call: "id" "(" expressions ")" •

    $default  reduce using rule 119 (subprogram_call)


State 211

   81 subprogram: sub_header ";" declarations subprograms comp_statement •

    $default  reduce using rule 81 (subprogram)


State 212

   56 limits: "id" •
   62 limit: "id" •

    ".."      reduce using rule 62 (limit)
    $default  reduce using rule 56 (limits)


State 213

   48 type_def: "array" "[" dims • "]" "of" typename
   53 dims: dims • "," limits

    ","  shift, and go to state 234
    "]"  shift, and go to state 235


State 214

   54 dims: limits •

    $default  reduce using rule 54 (dims)


State 215

   55 limits: limit • ".." limit

    ".."  shift, and go to state 236


State 216

   49 type_def: "set" "of" typename •

    $default  reduce using rule 49 (type_def)


State 217

   50 type_def: "record" fields "end" •

    $default  reduce using rule 50 (type_def)


State 218

   69 fields: fields ";" • field

    "id"  shift, and go to state 74

    field        go to state 237
    identifiers  go to state 177


State 219

   71 field: identifiers ":" • typename

    "integer"  shift, and go to state 184
    "real"     shift, and go to state 185
    "boolean"  shift, and go to state 186
    "char"     shift, and go to state 187
    "id"       shift, and go to state 188

    typename       go to state 238
    standard_type  go to state 190


State 220

   51 type_def: "(" identifiers ")" •

    $default  reduce using rule 51 (type_def)


State 221

   52 type_def: limit ".." limit •

    $default  reduce using rule 52 (type_def)


State 222

   46 type_defs: type_defs ";" "id" "=" type_def •

    $default  reduce using rule 46 (type_defs)


State 223

   76 variable_defs: variable_defs ";" identifiers ":" • typename

    "integer"  shift, and go to state 184
    "real"     shift, and go to state 185
    "boolean"  shift, and go to state 186
    "char"     shift, and go to state 187
    "id"       shift, and go to state 188

    typename       go to state 239
    standard_type  go to state 190


State 224

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression
   27 expressions: expressions "," expression •

    "> or >= or < or <= or <>"     shift, and go to state 88
    "+ or -"                       shift, and go to state 89
    "or"                           shift, and go to state 90
    "* or / or div or mod or and"  shift, and go to state 91
    "in"                           shift, and go to state 92
    "="                            shift, and go to state 93

    $default  reduce using rule 27 (expressions)


State 225

   87 parameter_list: parameter_list ";" pass • identifiers ":" typename

    "id"  shift, and go to state 74

    identifiers  go to state 240


State 226

   88 parameter_list: pass identifiers ":" • typename

    "integer"  shift, and go to state 184
    "real"     shift, and go to state 185
    "boolean"  shift, and go to state 186
    "char"     shift, and go to state 187
    "id"       shift, and go to state 188

    typename       go to state 241
    standard_type  go to state 190


State 227

  111 if_tail: "else" • statement

    error    shift, and go to state 50
    "begin"  shift, and go to state 25
    "if"     shift, and go to state 51
    "while"  shift, and go to state 52
    "for"    shift, and go to state 53
    "with"   shift, and go to state 54
    "read"   shift, and go to state 55
    "write"  shift, and go to state 56
    "id"     shift, and go to state 57

    "end"   reduce using rule 102 (statement)
    "else"  reduce using rule 102 (statement)
    ";"     reduce using rule 102 (statement)

    variable         go to state 58
    comp_statement   go to state 59
    statement        go to state 242
    assignment       go to state 62
    if_statement     go to state 63
    while_statement  go to state 64
    for_statement    go to state 65
    with_statement   go to state 66
    subprogram_call  go to state 67
    io_statement     go to state 68


State 228

  110 if_statement: "if" expression "then" statement if_tail •

    $default  reduce using rule 110 (if_statement)


State 229

  116 iter_space: expression "downto" • expression

    error     shift, and go to state 33
    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 243
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 230

  115 iter_space: expression "to" • expression

    error     shift, and go to state 33
    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 244
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 231

  114 for_statement: "for" "id" ":=" iter_space "do" • statement

    error    shift, and go to state 50
    "begin"  shift, and go to state 25
    "if"     shift, and go to state 51
    "while"  shift, and go to state 52
    "for"    shift, and go to state 53
    "with"   shift, and go to state 54
    "read"   shift, and go to state 55
    "write"  shift, and go to state 56
    "id"     shift, and go to state 57

    "end"   reduce using rule 102 (statement)
    "else"  reduce using rule 102 (statement)
    ";"     reduce using rule 102 (statement)

    variable         go to state 58
    comp_statement   go to state 59
    statement        go to state 245
    assignment       go to state 62
    if_statement     go to state 63
    while_statement  go to state 64
    for_statement    go to state 65
    with_statement   go to state 66
    subprogram_call  go to state 67
    io_statement     go to state 68


State 232

  122 read_list: read_list "," read_item •

    $default  reduce using rule 122 (read_list)


State 233

  125 write_list: write_list "," write_item •

    $default  reduce using rule 125 (write_list)


State 234

   53 dims: dims "," • limits

    "id"      shift, and go to state 212
    "iconst"  shift, and go to state 119
    "bconst"  shift, and go to state 120
    "cconst"  shift, and go to state 121
    "+ or -"  shift, and go to state 122

    limits  go to state 246
    limit   go to state 215


State 235

   48 type_def: "array" "[" dims "]" • "of" typename

    "of"  shift, and go to state 247


State 236

   55 limits: limit ".." • limit

    "id"      shift, and go to state 118
    "iconst"  shift, and go to state 119
    "bconst"  shift, and go to state 120
    "cconst"  shift, and go to state 121
    "+ or -"  shift, and go to state 122

    limit  go to state 248


State 237

   69 fields: fields ";" field •

    $default  reduce using rule 69 (fields)


State 238

   71 field: identifiers ":" typename •

    $default  reduce using rule 71 (field)


State 239

   76 variable_defs: variable_defs ";" identifiers ":" typename •

    $default  reduce using rule 76 (variable_defs)


State 240

   72 identifiers: identifiers • "," "id"
   87 parameter_list: parameter_list ";" pass identifiers • ":" typename

    ","  shift, and go to state 127
    ":"  shift, and go to state 249


State 241

   88 parameter_list: pass identifiers ":" typename •

    $default  reduce using rule 88 (parameter_list)


State 242

  111 if_tail: "else" statement •

    $default  reduce using rule 111 (if_tail)


State 243

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression
  116 iter_space: expression "downto" expression •

    "> or >= or < or <= or <>"     shift, and go to state 88
    "+ or -"                       shift, and go to state 89
    "or"                           shift, and go to state 90
    "* or / or div or mod or and"  shift, and go to state 91
    "in"                           shift, and go to state 92
    "="                            shift, and go to state 93

    $default  reduce using rule 116 (iter_space)


State 244

   11 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression • "=" expression
   13           | expression • "in" expression
   14           | expression • "or" expression
   15           | expression • "+ or -" expression
   16           | expression • "* or / or div or mod or and" expression
  115 iter_space: expression "to" expression •

    "> or >= or < or <= or <>"     shift, and go to state 88
    "+ or -"                       shift, and go to state 89
    "or"                           shift, and go to state 90
    "* or / or div or mod or and"  shift, and go to state 91
    "in"                           shift, and go to state 92
    "="                            shift, and go to state 93

    $default  reduce using rule 115 (iter_space)


State 245

  114 for_statement: "for" "id" ":=" iter_space "do" statement •

    $default  reduce using rule 114 (for_statement)


State 246

   53 dims: dims "," limits •

    $default  reduce using rule 53 (dims)


State 247

   48 type_def: "array" "[" dims "]" "of" • typename

    "integer"  shift, and go to state 184
    "real"     shift, and go to state 185
    "boolean"  shift, and go to state 186
    "char"     shift, and go to state 187
    "id"       shift, and go to state 188

    typename       go to state 250
    standard_type  go to state 190


State 248

   55 limits: limit ".." limit •

    $default  reduce using rule 55 (limits)


State 249

   87 parameter_list: parameter_list ";" pass identifiers ":" • typename

    "integer"  shift, and go to state 184
    "real"     shift, and go to state 185
    "boolean"  shift, and go to state 186
    "char"     shift, and go to state 187
    "id"       shift, and go to state 188

    typename       go to state 251
    standard_type  go to state 190


State 250

   48 type_def: "array" "[" dims "]" "of" typename •

    $default  reduce using rule 48 (type_def)


State 251

   87 parameter_list: parameter_list ";" pass identifiers ":" typename •

    $default  reduce using rule 87 (parameter_list)
