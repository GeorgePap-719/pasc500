Grammar

    0 $accept: program "EOF"

    1 $@1: %empty

    2 program: header $@1 declarations subprograms comp_statement "."

    3 header: "program" "id" ";"
    4       | error "id" ";"
    5       | "program" error ";"
    6       | "program" "id" error

    7 declarations: constdefs typedefs vardefs

    8 constdefs: "const" constant_defs ";"
    9          | %empty

   10 constant_defs: constant_defs ";" "id" "=" expression
   11              | "id" "=" expression

   12 expression: expression "> or >= or < or <= or <>" expression
   13           | expression "=" expression
   14           | expression "in" expression
   15           | expression "or" expression
   16           | expression "+ or -" expression
   17           | expression "* or / or div or mod or and" expression
   18           | "+ or -" expression
   19           | "not" expression
   20           | variable
   21           | "id" "(" expressions ")"
   22           | constant
   23           | "(" expression ")"
   24           | setexpression

   25 variable: "id"
   26         | variable "." "id"
   27         | variable "[" expressions "]"

   28 expressions: expressions "," expression
   29            | expression

   30 constant: "iconst"
   31         | "rconst"
   32         | "bconst"
   33         | "cconst"

   34 setexpression: "[" elexpressions "]"
   35              | "[" "]"

   36 elexpressions: elexpressions "," elexpression
   37              | elexpression

   38 elexpression: expression ".." expression
   39             | expression

   40 typedefs: "type" type_defs ";"
   41         | %empty

   42 type_defs: type_defs ";" "id" "=" type_def
   43          | "id" "=" type_def

   44 type_def: "array" "[" dims "]" "of" typename
   45         | "set" "of" typename
   46         | "record" fields "end"
   47         | "(" identifiers ")"
   48         | limit ".." limit

   49 dims: dims "," limits
   50     | limits

   51 limits: limit ".." limit
   52       | "id"

   53 limit: "+ or -" "iconst"
   54      | "+ or -" "id"
   55      | "iconst"
   56      | "cconst"
   57      | "bconst"
   58      | "id"

   59 typename: standard_type
   60         | "id"

   61 standard_type: "integer"
   62              | "real"
   63              | "boolean"
   64              | "char"

   65 fields: fields ";" field
   66       | field

   67 field: identifiers ":" typename

   68 identifiers: identifiers "," "id"
   69            | "id"

   70 vardefs: "var" variable_defs ";"
   71        | %empty

   72 variable_defs: variable_defs ";" identifiers ":" typename
   73              | identifiers ":" typename

   74 subprograms: subprograms subprogram ";"
   75            | %empty

   76 subprogram: sub_header ";" "forward"
   77           | sub_header ";" declarations subprograms comp_statement

   78 sub_header: "function" "id" formal_parameters ":" standard_type
   79           | "procedure" "id" formal_parameters
   80           | "function" "id"

   81 formal_parameters: "(" parameter_list ")"
   82                  | %empty

   83 parameter_list: parameter_list ";" pass identifiers ":" typename
   84               | pass identifiers ":" typename

   85 pass: "var"
   86     | %empty

   87 $@2: %empty

   88 comp_statement: "begin" $@2 statements "end"

   89 statements: statements ";" statement
   90           | statement

   91 statement: assignment
   92          | if_statement
   93          | while_statement
   94          | for_statement
   95          | with_statement
   96          | subprogram_call
   97          | io_statement
   98          | comp_statement
   99          | %empty

  100 assignment: variable ":=" expression
  101           | variable ":=" "string"
  102           | error ":=" expression
  103           | variable error expression
  104           | error ":=" "string"
  105           | variable error "string"
  106           | variable ":=" error

  107 $@3: %empty

  108 if_statement: "if" expression "then" $@3 statement if_tail

  109 if_tail: "else" statement
  110        | %empty

  111 $@4: %empty

  112 while_statement: "while" expression "do" $@4 statement

  113 $@5: %empty

  114 for_statement: "for" "id" ":=" iter_space "do" $@5 statement

  115 iter_space: expression "to" expression
  116           | expression "downto" expression

  117 with_statement: "with" variable "do" statement

  118 subprogram_call: "id"
  119                | "id" "(" expressions ")"

  120 io_statement: "read" "(" read_list ")"
  121             | "write" "(" write_list ")"

  122 read_list: read_list "," read_item
  123          | read_item

  124 read_item: variable

  125 write_list: write_list "," write_item
  126           | write_item

  127 write_item: expression
  128           | "string"


Terminals, with rules where they appear

    "EOF" (0) 0
    error (256) 4 5 6 102 103 104 105 106
    "program" (258) 3 5 6
    "const" (259) 8
    "type" (260) 40
    "array" (261) 44
    "set" (262) 45
    "of" (263) 44 45
    "record" (264) 46
    "var" (265) 70 85
    "forward" (266) 76
    "function" (267) 78 80
    "procedure" (268) 79
    "integer" (269) 61
    "real" (270) 62
    "boolean" (271) 63
    "char" (272) 64
    "begin" (273) 88
    "end" (274) 46 88
    "if" (275) 108
    "then" (276) 108
    "else" (277) 109
    "while" (278) 112
    "do" (279) 112 114 117
    "for" (280) 114
    "downto" (281) 116
    "to" (282) 115
    "with" (283) 117
    "read" (284) 120
    "write" (285) 121
    "id" <strval> (286) 3 4 6 10 11 21 25 26 42 43 52 54 58 60 68 69 78 79 80 114 118 119
    "iconst" <intval> (287) 30 53 55
    "rconst" <floatval> (288) 31
    "bconst" <boolean> (289) 32 57
    "cconst" <charval> (290) 33 56
    "> or >= or < or <= or <>" (291) 12
    "+ or -" (292) 16 18 53 54
    "or" (293) 15
    "* or / or div or mod or and" (294) 17
    "not" (295) 19
    "in" (296) 14
    "string" (297) 101 104 105 128
    "(" (298) 21 23 47 81 119 120 121
    ")" (299) 21 23 47 81 119 120 121
    ";" (300) 3 4 5 8 10 40 42 65 70 72 74 76 77 83 89
    "." (301) 2 26
    "," (302) 28 36 49 68 122 125
    "=" (303) 10 11 13 42 43
    ":" (304) 67 72 73 78 83 84
    "[" (305) 27 34 35 44
    "]" (306) 27 34 35 44
    ":=" (307) 100 101 102 104 106 114
    ".." (308) 38 48 51
    LOWER_THAN_ELSE (309)


Nonterminals, with rules where they appear

    $accept (55)
        on left: 0
    program (56)
        on left: 2
        on right: 0
    $@1 (57)
        on left: 1
        on right: 2
    header (58)
        on left: 3 4 5 6
        on right: 2
    declarations (59)
        on left: 7
        on right: 2 77
    constdefs (60)
        on left: 8 9
        on right: 7
    constant_defs (61)
        on left: 10 11
        on right: 8 10
    expression (62)
        on left: 12 13 14 15 16 17 18 19 20 21 22 23 24
        on right: 10 11 12 13 14 15 16 17 18 19 23 28 29 38 39 100 102 103 108 112 115 116 127
    variable (63)
        on left: 25 26 27
        on right: 20 26 27 100 101 103 105 106 117 124
    expressions (64)
        on left: 28 29
        on right: 21 27 28 119
    constant (65)
        on left: 30 31 32 33
        on right: 22
    setexpression (66)
        on left: 34 35
        on right: 24
    elexpressions (67)
        on left: 36 37
        on right: 34 36
    elexpression (68)
        on left: 38 39
        on right: 36 37
    typedefs (69)
        on left: 40 41
        on right: 7
    type_defs (70)
        on left: 42 43
        on right: 40 42
    type_def (71)
        on left: 44 45 46 47 48
        on right: 42 43
    dims (72)
        on left: 49 50
        on right: 44 49
    limits (73)
        on left: 51 52
        on right: 49 50
    limit (74)
        on left: 53 54 55 56 57 58
        on right: 48 51
    typename (75)
        on left: 59 60
        on right: 44 45 67 72 73 83 84
    standard_type (76)
        on left: 61 62 63 64
        on right: 59 78
    fields (77)
        on left: 65 66
        on right: 46 65
    field (78)
        on left: 67
        on right: 65 66
    identifiers (79)
        on left: 68 69
        on right: 47 67 68 72 73 83 84
    vardefs (80)
        on left: 70 71
        on right: 7
    variable_defs (81)
        on left: 72 73
        on right: 70 72
    subprograms (82)
        on left: 74 75
        on right: 2 74 77
    subprogram (83)
        on left: 76 77
        on right: 74
    sub_header (84)
        on left: 78 79 80
        on right: 76 77
    formal_parameters (85)
        on left: 81 82
        on right: 78 79
    parameter_list (86)
        on left: 83 84
        on right: 81 83
    pass (87)
        on left: 85 86
        on right: 83 84
    comp_statement (88)
        on left: 88
        on right: 2 77 98
    $@2 (89)
        on left: 87
        on right: 88
    statements (90)
        on left: 89 90
        on right: 88 89
    statement (91)
        on left: 91 92 93 94 95 96 97 98 99
        on right: 89 90 108 109 112 114 117
    assignment (92)
        on left: 100 101 102 103 104 105 106
        on right: 91
    if_statement (93)
        on left: 108
        on right: 92
    $@3 (94)
        on left: 107
        on right: 108
    if_tail (95)
        on left: 109 110
        on right: 108
    while_statement (96)
        on left: 112
        on right: 93
    $@4 (97)
        on left: 111
        on right: 112
    for_statement (98)
        on left: 114
        on right: 94
    $@5 (99)
        on left: 113
        on right: 114
    iter_space (100)
        on left: 115 116
        on right: 114
    with_statement (101)
        on left: 117
        on right: 95
    subprogram_call (102)
        on left: 118 119
        on right: 96
    io_statement (103)
        on left: 120 121
        on right: 97
    read_list (104)
        on left: 122 123
        on right: 120 122
    read_item (105)
        on left: 124
        on right: 122 123
    write_list (106)
        on left: 125 126
        on right: 121 125
    write_item (107)
        on left: 127 128
        on right: 125 126


State 0

    0 $accept: • program "EOF"

    error      shift, and go to state 1
    "program"  shift, and go to state 2

    program  go to state 3
    header   go to state 4


State 1

    4 header: error • "id" ";"

    "id"  shift, and go to state 5


State 2

    3 header: "program" • "id" ";"
    5       | "program" • error ";"
    6       | "program" • "id" error

    error  shift, and go to state 6
    "id"   shift, and go to state 7


State 3

    0 $accept: program • "EOF"

    "EOF"  shift, and go to state 8


State 4

    2 program: header • $@1 declarations subprograms comp_statement "."

    $default  reduce using rule 1 ($@1)

    $@1  go to state 9


State 5

    4 header: error "id" • ";"

    ";"  shift, and go to state 10


State 6

    5 header: "program" error • ";"

    ";"  shift, and go to state 11


State 7

    3 header: "program" "id" • ";"
    6       | "program" "id" • error

    error  shift, and go to state 12
    ";"    shift, and go to state 13


State 8

    0 $accept: program "EOF" •

    $default  accept


State 9

    2 program: header $@1 • declarations subprograms comp_statement "."

    "const"  shift, and go to state 14

    $default  reduce using rule 9 (constdefs)

    declarations  go to state 15
    constdefs     go to state 16


State 10

    4 header: error "id" ";" •

    $default  reduce using rule 4 (header)


State 11

    5 header: "program" error ";" •

    $default  reduce using rule 5 (header)


State 12

    6 header: "program" "id" error •

    $default  reduce using rule 6 (header)


State 13

    3 header: "program" "id" ";" •

    $default  reduce using rule 3 (header)


State 14

    8 constdefs: "const" • constant_defs ";"

    "id"  shift, and go to state 17

    constant_defs  go to state 18


State 15

    2 program: header $@1 declarations • subprograms comp_statement "."

    $default  reduce using rule 75 (subprograms)

    subprograms  go to state 19


State 16

    7 declarations: constdefs • typedefs vardefs

    "type"  shift, and go to state 20

    $default  reduce using rule 41 (typedefs)

    typedefs  go to state 21


State 17

   11 constant_defs: "id" • "=" expression

    "="  shift, and go to state 22


State 18

    8 constdefs: "const" constant_defs • ";"
   10 constant_defs: constant_defs • ";" "id" "=" expression

    ";"  shift, and go to state 23


State 19

    2 program: header $@1 declarations subprograms • comp_statement "."
   74 subprograms: subprograms • subprogram ";"

    "function"   shift, and go to state 24
    "procedure"  shift, and go to state 25
    "begin"      shift, and go to state 26

    subprogram      go to state 27
    sub_header      go to state 28
    comp_statement  go to state 29


State 20

   40 typedefs: "type" • type_defs ";"

    "id"  shift, and go to state 30

    type_defs  go to state 31


State 21

    7 declarations: constdefs typedefs • vardefs

    "var"  shift, and go to state 32

    $default  reduce using rule 71 (vardefs)

    vardefs  go to state 33


State 22

   11 constant_defs: "id" "=" • expression

    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 43
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 23

    8 constdefs: "const" constant_defs ";" •
   10 constant_defs: constant_defs ";" • "id" "=" expression

    "id"  shift, and go to state 47

    $default  reduce using rule 8 (constdefs)


State 24

   78 sub_header: "function" • "id" formal_parameters ":" standard_type
   80           | "function" • "id"

    "id"  shift, and go to state 48


State 25

   79 sub_header: "procedure" • "id" formal_parameters

    "id"  shift, and go to state 49


State 26

   88 comp_statement: "begin" • $@2 statements "end"

    $default  reduce using rule 87 ($@2)

    $@2  go to state 50


State 27

   74 subprograms: subprograms subprogram • ";"

    ";"  shift, and go to state 51


State 28

   76 subprogram: sub_header • ";" "forward"
   77           | sub_header • ";" declarations subprograms comp_statement

    ";"  shift, and go to state 52


State 29

    2 program: header $@1 declarations subprograms comp_statement • "."

    "."  shift, and go to state 53


State 30

   43 type_defs: "id" • "=" type_def

    "="  shift, and go to state 54


State 31

   40 typedefs: "type" type_defs • ";"
   42 type_defs: type_defs • ";" "id" "=" type_def

    ";"  shift, and go to state 55


State 32

   70 vardefs: "var" • variable_defs ";"

    "id"  shift, and go to state 56

    identifiers    go to state 57
    variable_defs  go to state 58


State 33

    7 declarations: constdefs typedefs vardefs •

    $default  reduce using rule 7 (declarations)


State 34

   21 expression: "id" • "(" expressions ")"
   25 variable: "id" •

    "("  shift, and go to state 59

    $default  reduce using rule 25 (variable)


State 35

   30 constant: "iconst" •

    $default  reduce using rule 30 (constant)


State 36

   31 constant: "rconst" •

    $default  reduce using rule 31 (constant)


State 37

   32 constant: "bconst" •

    $default  reduce using rule 32 (constant)


State 38

   33 constant: "cconst" •

    $default  reduce using rule 33 (constant)


State 39

   18 expression: "+ or -" • expression

    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 60
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 40

   19 expression: "not" • expression

    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 61
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 41

   23 expression: "(" • expression ")"

    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 62
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 42

   34 setexpression: "[" • elexpressions "]"
   35              | "[" • "]"

    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42
    "]"       shift, and go to state 63

    expression     go to state 64
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46
    elexpressions  go to state 65
    elexpression   go to state 66


State 43

   11 constant_defs: "id" "=" expression •
   12 expression: expression • "> or >= or < or <= or <>" expression
   13           | expression • "=" expression
   14           | expression • "in" expression
   15           | expression • "or" expression
   16           | expression • "+ or -" expression
   17           | expression • "* or / or div or mod or and" expression

    "> or >= or < or <= or <>"     shift, and go to state 67
    "+ or -"                       shift, and go to state 68
    "or"                           shift, and go to state 69
    "* or / or div or mod or and"  shift, and go to state 70
    "in"                           shift, and go to state 71
    "="                            shift, and go to state 72

    $default  reduce using rule 11 (constant_defs)


State 44

   20 expression: variable •
   26 variable: variable • "." "id"
   27         | variable • "[" expressions "]"

    "."  shift, and go to state 73
    "["  shift, and go to state 74

    $default  reduce using rule 20 (expression)


State 45

   22 expression: constant •

    $default  reduce using rule 22 (expression)


State 46

   24 expression: setexpression •

    $default  reduce using rule 24 (expression)


State 47

   10 constant_defs: constant_defs ";" "id" • "=" expression

    "="  shift, and go to state 75


State 48

   78 sub_header: "function" "id" • formal_parameters ":" standard_type
   80           | "function" "id" •

    "("  shift, and go to state 76

    ":"       reduce using rule 82 (formal_parameters)
    $default  reduce using rule 80 (sub_header)

    formal_parameters  go to state 77


State 49

   79 sub_header: "procedure" "id" • formal_parameters

    "("  shift, and go to state 76

    $default  reduce using rule 82 (formal_parameters)

    formal_parameters  go to state 78


State 50

   88 comp_statement: "begin" $@2 • statements "end"

    error    shift, and go to state 79
    "begin"  shift, and go to state 26
    "if"     shift, and go to state 80
    "while"  shift, and go to state 81
    "for"    shift, and go to state 82
    "with"   shift, and go to state 83
    "read"   shift, and go to state 84
    "write"  shift, and go to state 85
    "id"     shift, and go to state 86

    "end"  reduce using rule 99 (statement)
    ";"    reduce using rule 99 (statement)

    variable         go to state 87
    comp_statement   go to state 88
    statements       go to state 89
    statement        go to state 90
    assignment       go to state 91
    if_statement     go to state 92
    while_statement  go to state 93
    for_statement    go to state 94
    with_statement   go to state 95
    subprogram_call  go to state 96
    io_statement     go to state 97


State 51

   74 subprograms: subprograms subprogram ";" •

    $default  reduce using rule 74 (subprograms)


State 52

   76 subprogram: sub_header ";" • "forward"
   77           | sub_header ";" • declarations subprograms comp_statement

    "const"    shift, and go to state 14
    "forward"  shift, and go to state 98

    $default  reduce using rule 9 (constdefs)

    declarations  go to state 99
    constdefs     go to state 16


State 53

    2 program: header $@1 declarations subprograms comp_statement "." •

    $default  reduce using rule 2 (program)


State 54

   43 type_defs: "id" "=" • type_def

    "array"   shift, and go to state 100
    "set"     shift, and go to state 101
    "record"  shift, and go to state 102
    "id"      shift, and go to state 103
    "iconst"  shift, and go to state 104
    "bconst"  shift, and go to state 105
    "cconst"  shift, and go to state 106
    "+ or -"  shift, and go to state 107
    "("       shift, and go to state 108

    type_def  go to state 109
    limit     go to state 110


State 55

   40 typedefs: "type" type_defs ";" •
   42 type_defs: type_defs ";" • "id" "=" type_def

    "id"  shift, and go to state 111

    $default  reduce using rule 40 (typedefs)


State 56

   69 identifiers: "id" •

    $default  reduce using rule 69 (identifiers)


State 57

   68 identifiers: identifiers • "," "id"
   73 variable_defs: identifiers • ":" typename

    ","  shift, and go to state 112
    ":"  shift, and go to state 113


State 58

   70 vardefs: "var" variable_defs • ";"
   72 variable_defs: variable_defs • ";" identifiers ":" typename

    ";"  shift, and go to state 114


State 59

   21 expression: "id" "(" • expressions ")"

    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 115
    variable       go to state 44
    expressions    go to state 116
    constant       go to state 45
    setexpression  go to state 46


State 60

   12 expression: expression • "> or >= or < or <= or <>" expression
   13           | expression • "=" expression
   14           | expression • "in" expression
   15           | expression • "or" expression
   16           | expression • "+ or -" expression
   17           | expression • "* or / or div or mod or and" expression
   18           | "+ or -" expression •

    "* or / or div or mod or and"  shift, and go to state 70

    $default  reduce using rule 18 (expression)


State 61

   12 expression: expression • "> or >= or < or <= or <>" expression
   13           | expression • "=" expression
   14           | expression • "in" expression
   15           | expression • "or" expression
   16           | expression • "+ or -" expression
   17           | expression • "* or / or div or mod or and" expression
   19           | "not" expression •

    $default  reduce using rule 19 (expression)


State 62

   12 expression: expression • "> or >= or < or <= or <>" expression
   13           | expression • "=" expression
   14           | expression • "in" expression
   15           | expression • "or" expression
   16           | expression • "+ or -" expression
   17           | expression • "* or / or div or mod or and" expression
   23           | "(" expression • ")"

    "> or >= or < or <= or <>"     shift, and go to state 67
    "+ or -"                       shift, and go to state 68
    "or"                           shift, and go to state 69
    "* or / or div or mod or and"  shift, and go to state 70
    "in"                           shift, and go to state 71
    ")"                            shift, and go to state 117
    "="                            shift, and go to state 72


State 63

   35 setexpression: "[" "]" •

    $default  reduce using rule 35 (setexpression)


State 64

   12 expression: expression • "> or >= or < or <= or <>" expression
   13           | expression • "=" expression
   14           | expression • "in" expression
   15           | expression • "or" expression
   16           | expression • "+ or -" expression
   17           | expression • "* or / or div or mod or and" expression
   38 elexpression: expression • ".." expression
   39             | expression •

    "> or >= or < or <= or <>"     shift, and go to state 67
    "+ or -"                       shift, and go to state 68
    "or"                           shift, and go to state 69
    "* or / or div or mod or and"  shift, and go to state 70
    "in"                           shift, and go to state 71
    "="                            shift, and go to state 72
    ".."                           shift, and go to state 118

    $default  reduce using rule 39 (elexpression)


State 65

   34 setexpression: "[" elexpressions • "]"
   36 elexpressions: elexpressions • "," elexpression

    ","  shift, and go to state 119
    "]"  shift, and go to state 120


State 66

   37 elexpressions: elexpression •

    $default  reduce using rule 37 (elexpressions)


State 67

   12 expression: expression "> or >= or < or <= or <>" • expression

    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 121
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 68

   16 expression: expression "+ or -" • expression

    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 122
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 69

   15 expression: expression "or" • expression

    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 123
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 70

   17 expression: expression "* or / or div or mod or and" • expression

    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 124
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 71

   14 expression: expression "in" • expression

    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 125
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 72

   13 expression: expression "=" • expression

    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 126
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 73

   26 variable: variable "." • "id"

    "id"  shift, and go to state 127


State 74

   27 variable: variable "[" • expressions "]"

    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 115
    variable       go to state 44
    expressions    go to state 128
    constant       go to state 45
    setexpression  go to state 46


State 75

   10 constant_defs: constant_defs ";" "id" "=" • expression

    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 129
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 76

   81 formal_parameters: "(" • parameter_list ")"

    "var"  shift, and go to state 130

    $default  reduce using rule 86 (pass)

    parameter_list  go to state 131
    pass            go to state 132


State 77

   78 sub_header: "function" "id" formal_parameters • ":" standard_type

    ":"  shift, and go to state 133


State 78

   79 sub_header: "procedure" "id" formal_parameters •

    $default  reduce using rule 79 (sub_header)


State 79

  102 assignment: error • ":=" expression
  104           | error • ":=" "string"

    ":="  shift, and go to state 134


State 80

  108 if_statement: "if" • expression "then" $@3 statement if_tail

    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 135
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 81

  112 while_statement: "while" • expression "do" $@4 statement

    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 136
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 82

  114 for_statement: "for" • "id" ":=" iter_space "do" $@5 statement

    "id"  shift, and go to state 137


State 83

  117 with_statement: "with" • variable "do" statement

    "id"  shift, and go to state 138

    variable  go to state 139


State 84

  120 io_statement: "read" • "(" read_list ")"

    "("  shift, and go to state 140


State 85

  121 io_statement: "write" • "(" write_list ")"

    "("  shift, and go to state 141


State 86

   25 variable: "id" •
  118 subprogram_call: "id" •
  119                | "id" • "(" expressions ")"

    "("  shift, and go to state 142

    "end"     reduce using rule 118 (subprogram_call)
    "else"    reduce using rule 118 (subprogram_call)
    ";"       reduce using rule 118 (subprogram_call)
    $default  reduce using rule 25 (variable)


State 87

   26 variable: variable • "." "id"
   27         | variable • "[" expressions "]"
  100 assignment: variable • ":=" expression
  101           | variable • ":=" "string"
  103           | variable • error expression
  105           | variable • error "string"
  106           | variable • ":=" error

    error  shift, and go to state 143
    "."    shift, and go to state 73
    "["    shift, and go to state 74
    ":="   shift, and go to state 144


State 88

   98 statement: comp_statement •

    $default  reduce using rule 98 (statement)


State 89

   88 comp_statement: "begin" $@2 statements • "end"
   89 statements: statements • ";" statement

    "end"  shift, and go to state 145
    ";"    shift, and go to state 146


State 90

   90 statements: statement •

    $default  reduce using rule 90 (statements)


State 91

   91 statement: assignment •

    $default  reduce using rule 91 (statement)


State 92

   92 statement: if_statement •

    $default  reduce using rule 92 (statement)


State 93

   93 statement: while_statement •

    $default  reduce using rule 93 (statement)


State 94

   94 statement: for_statement •

    $default  reduce using rule 94 (statement)


State 95

   95 statement: with_statement •

    $default  reduce using rule 95 (statement)


State 96

   96 statement: subprogram_call •

    $default  reduce using rule 96 (statement)


State 97

   97 statement: io_statement •

    $default  reduce using rule 97 (statement)


State 98

   76 subprogram: sub_header ";" "forward" •

    $default  reduce using rule 76 (subprogram)


State 99

   77 subprogram: sub_header ";" declarations • subprograms comp_statement

    $default  reduce using rule 75 (subprograms)

    subprograms  go to state 147


State 100

   44 type_def: "array" • "[" dims "]" "of" typename

    "["  shift, and go to state 148


State 101

   45 type_def: "set" • "of" typename

    "of"  shift, and go to state 149


State 102

   46 type_def: "record" • fields "end"

    "id"  shift, and go to state 56

    fields       go to state 150
    field        go to state 151
    identifiers  go to state 152


State 103

   58 limit: "id" •

    $default  reduce using rule 58 (limit)


State 104

   55 limit: "iconst" •

    $default  reduce using rule 55 (limit)


State 105

   57 limit: "bconst" •

    $default  reduce using rule 57 (limit)


State 106

   56 limit: "cconst" •

    $default  reduce using rule 56 (limit)


State 107

   53 limit: "+ or -" • "iconst"
   54      | "+ or -" • "id"

    "id"      shift, and go to state 153
    "iconst"  shift, and go to state 154


State 108

   47 type_def: "(" • identifiers ")"

    "id"  shift, and go to state 56

    identifiers  go to state 155


State 109

   43 type_defs: "id" "=" type_def •

    $default  reduce using rule 43 (type_defs)


State 110

   48 type_def: limit • ".." limit

    ".."  shift, and go to state 156


State 111

   42 type_defs: type_defs ";" "id" • "=" type_def

    "="  shift, and go to state 157


State 112

   68 identifiers: identifiers "," • "id"

    "id"  shift, and go to state 158


State 113

   73 variable_defs: identifiers ":" • typename

    "integer"  shift, and go to state 159
    "real"     shift, and go to state 160
    "boolean"  shift, and go to state 161
    "char"     shift, and go to state 162
    "id"       shift, and go to state 163

    typename       go to state 164
    standard_type  go to state 165


State 114

   70 vardefs: "var" variable_defs ";" •
   72 variable_defs: variable_defs ";" • identifiers ":" typename

    "id"  shift, and go to state 56

    $default  reduce using rule 70 (vardefs)

    identifiers  go to state 166


State 115

   12 expression: expression • "> or >= or < or <= or <>" expression
   13           | expression • "=" expression
   14           | expression • "in" expression
   15           | expression • "or" expression
   16           | expression • "+ or -" expression
   17           | expression • "* or / or div or mod or and" expression
   29 expressions: expression •

    "> or >= or < or <= or <>"     shift, and go to state 67
    "+ or -"                       shift, and go to state 68
    "or"                           shift, and go to state 69
    "* or / or div or mod or and"  shift, and go to state 70
    "in"                           shift, and go to state 71
    "="                            shift, and go to state 72

    $default  reduce using rule 29 (expressions)


State 116

   21 expression: "id" "(" expressions • ")"
   28 expressions: expressions • "," expression

    ")"  shift, and go to state 167
    ","  shift, and go to state 168


State 117

   23 expression: "(" expression ")" •

    $default  reduce using rule 23 (expression)


State 118

   38 elexpression: expression ".." • expression

    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 169
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 119

   36 elexpressions: elexpressions "," • elexpression

    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 64
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46
    elexpression   go to state 170


State 120

   34 setexpression: "[" elexpressions "]" •

    $default  reduce using rule 34 (setexpression)


State 121

   12 expression: expression • "> or >= or < or <= or <>" expression
   12           | expression "> or >= or < or <= or <>" expression •
   13           | expression • "=" expression
   14           | expression • "in" expression
   15           | expression • "or" expression
   16           | expression • "+ or -" expression
   17           | expression • "* or / or div or mod or and" expression

    "+ or -"                       shift, and go to state 68
    "or"                           shift, and go to state 69
    "* or / or div or mod or and"  shift, and go to state 70

    $default  reduce using rule 12 (expression)


State 122

   12 expression: expression • "> or >= or < or <= or <>" expression
   13           | expression • "=" expression
   14           | expression • "in" expression
   15           | expression • "or" expression
   16           | expression • "+ or -" expression
   16           | expression "+ or -" expression •
   17           | expression • "* or / or div or mod or and" expression

    "* or / or div or mod or and"  shift, and go to state 70

    $default  reduce using rule 16 (expression)


State 123

   12 expression: expression • "> or >= or < or <= or <>" expression
   13           | expression • "=" expression
   14           | expression • "in" expression
   15           | expression • "or" expression
   15           | expression "or" expression •
   16           | expression • "+ or -" expression
   17           | expression • "* or / or div or mod or and" expression

    "* or / or div or mod or and"  shift, and go to state 70

    $default  reduce using rule 15 (expression)


State 124

   12 expression: expression • "> or >= or < or <= or <>" expression
   13           | expression • "=" expression
   14           | expression • "in" expression
   15           | expression • "or" expression
   16           | expression • "+ or -" expression
   17           | expression • "* or / or div or mod or and" expression
   17           | expression "* or / or div or mod or and" expression •

    $default  reduce using rule 17 (expression)


State 125

   12 expression: expression • "> or >= or < or <= or <>" expression
   13           | expression • "=" expression
   14           | expression • "in" expression
   14           | expression "in" expression •
   15           | expression • "or" expression
   16           | expression • "+ or -" expression
   17           | expression • "* or / or div or mod or and" expression

    "+ or -"                       shift, and go to state 68
    "or"                           shift, and go to state 69
    "* or / or div or mod or and"  shift, and go to state 70

    $default  reduce using rule 14 (expression)


State 126

   12 expression: expression • "> or >= or < or <= or <>" expression
   13           | expression • "=" expression
   13           | expression "=" expression •
   14           | expression • "in" expression
   15           | expression • "or" expression
   16           | expression • "+ or -" expression
   17           | expression • "* or / or div or mod or and" expression

    "+ or -"                       shift, and go to state 68
    "or"                           shift, and go to state 69
    "* or / or div or mod or and"  shift, and go to state 70

    $default  reduce using rule 13 (expression)


State 127

   26 variable: variable "." "id" •

    $default  reduce using rule 26 (variable)


State 128

   27 variable: variable "[" expressions • "]"
   28 expressions: expressions • "," expression

    ","  shift, and go to state 168
    "]"  shift, and go to state 171


State 129

   10 constant_defs: constant_defs ";" "id" "=" expression •
   12 expression: expression • "> or >= or < or <= or <>" expression
   13           | expression • "=" expression
   14           | expression • "in" expression
   15           | expression • "or" expression
   16           | expression • "+ or -" expression
   17           | expression • "* or / or div or mod or and" expression

    "> or >= or < or <= or <>"     shift, and go to state 67
    "+ or -"                       shift, and go to state 68
    "or"                           shift, and go to state 69
    "* or / or div or mod or and"  shift, and go to state 70
    "in"                           shift, and go to state 71
    "="                            shift, and go to state 72

    $default  reduce using rule 10 (constant_defs)


State 130

   85 pass: "var" •

    $default  reduce using rule 85 (pass)


State 131

   81 formal_parameters: "(" parameter_list • ")"
   83 parameter_list: parameter_list • ";" pass identifiers ":" typename

    ")"  shift, and go to state 172
    ";"  shift, and go to state 173


State 132

   84 parameter_list: pass • identifiers ":" typename

    "id"  shift, and go to state 56

    identifiers  go to state 174


State 133

   78 sub_header: "function" "id" formal_parameters ":" • standard_type

    "integer"  shift, and go to state 159
    "real"     shift, and go to state 160
    "boolean"  shift, and go to state 161
    "char"     shift, and go to state 162

    standard_type  go to state 175


State 134

  102 assignment: error ":=" • expression
  104           | error ":=" • "string"

    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "string"  shift, and go to state 176
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 177
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 135

   12 expression: expression • "> or >= or < or <= or <>" expression
   13           | expression • "=" expression
   14           | expression • "in" expression
   15           | expression • "or" expression
   16           | expression • "+ or -" expression
   17           | expression • "* or / or div or mod or and" expression
  108 if_statement: "if" expression • "then" $@3 statement if_tail

    "then"                         shift, and go to state 178
    "> or >= or < or <= or <>"     shift, and go to state 67
    "+ or -"                       shift, and go to state 68
    "or"                           shift, and go to state 69
    "* or / or div or mod or and"  shift, and go to state 70
    "in"                           shift, and go to state 71
    "="                            shift, and go to state 72


State 136

   12 expression: expression • "> or >= or < or <= or <>" expression
   13           | expression • "=" expression
   14           | expression • "in" expression
   15           | expression • "or" expression
   16           | expression • "+ or -" expression
   17           | expression • "* or / or div or mod or and" expression
  112 while_statement: "while" expression • "do" $@4 statement

    "do"                           shift, and go to state 179
    "> or >= or < or <= or <>"     shift, and go to state 67
    "+ or -"                       shift, and go to state 68
    "or"                           shift, and go to state 69
    "* or / or div or mod or and"  shift, and go to state 70
    "in"                           shift, and go to state 71
    "="                            shift, and go to state 72


State 137

  114 for_statement: "for" "id" • ":=" iter_space "do" $@5 statement

    ":="  shift, and go to state 180


State 138

   25 variable: "id" •

    $default  reduce using rule 25 (variable)


State 139

   26 variable: variable • "." "id"
   27         | variable • "[" expressions "]"
  117 with_statement: "with" variable • "do" statement

    "do"  shift, and go to state 181
    "."   shift, and go to state 73
    "["   shift, and go to state 74


State 140

  120 io_statement: "read" "(" • read_list ")"

    "id"  shift, and go to state 138

    variable   go to state 182
    read_list  go to state 183
    read_item  go to state 184


State 141

  121 io_statement: "write" "(" • write_list ")"

    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "string"  shift, and go to state 185
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 186
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46
    write_list     go to state 187
    write_item     go to state 188


State 142

  119 subprogram_call: "id" "(" • expressions ")"

    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 115
    variable       go to state 44
    expressions    go to state 189
    constant       go to state 45
    setexpression  go to state 46


State 143

  103 assignment: variable error • expression
  105           | variable error • "string"

    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "string"  shift, and go to state 190
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 191
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 144

  100 assignment: variable ":=" • expression
  101           | variable ":=" • "string"
  106           | variable ":=" • error

    error     shift, and go to state 192
    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "string"  shift, and go to state 193
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 194
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 145

   88 comp_statement: "begin" $@2 statements "end" •

    $default  reduce using rule 88 (comp_statement)


State 146

   89 statements: statements ";" • statement

    error    shift, and go to state 79
    "begin"  shift, and go to state 26
    "if"     shift, and go to state 80
    "while"  shift, and go to state 81
    "for"    shift, and go to state 82
    "with"   shift, and go to state 83
    "read"   shift, and go to state 84
    "write"  shift, and go to state 85
    "id"     shift, and go to state 86

    "end"  reduce using rule 99 (statement)
    ";"    reduce using rule 99 (statement)

    variable         go to state 87
    comp_statement   go to state 88
    statement        go to state 195
    assignment       go to state 91
    if_statement     go to state 92
    while_statement  go to state 93
    for_statement    go to state 94
    with_statement   go to state 95
    subprogram_call  go to state 96
    io_statement     go to state 97


State 147

   74 subprograms: subprograms • subprogram ";"
   77 subprogram: sub_header ";" declarations subprograms • comp_statement

    "function"   shift, and go to state 24
    "procedure"  shift, and go to state 25
    "begin"      shift, and go to state 26

    subprogram      go to state 27
    sub_header      go to state 28
    comp_statement  go to state 196


State 148

   44 type_def: "array" "[" • dims "]" "of" typename

    "id"      shift, and go to state 197
    "iconst"  shift, and go to state 104
    "bconst"  shift, and go to state 105
    "cconst"  shift, and go to state 106
    "+ or -"  shift, and go to state 107

    dims    go to state 198
    limits  go to state 199
    limit   go to state 200


State 149

   45 type_def: "set" "of" • typename

    "integer"  shift, and go to state 159
    "real"     shift, and go to state 160
    "boolean"  shift, and go to state 161
    "char"     shift, and go to state 162
    "id"       shift, and go to state 163

    typename       go to state 201
    standard_type  go to state 165


State 150

   46 type_def: "record" fields • "end"
   65 fields: fields • ";" field

    "end"  shift, and go to state 202
    ";"    shift, and go to state 203


State 151

   66 fields: field •

    $default  reduce using rule 66 (fields)


State 152

   67 field: identifiers • ":" typename
   68 identifiers: identifiers • "," "id"

    ","  shift, and go to state 112
    ":"  shift, and go to state 204


State 153

   54 limit: "+ or -" "id" •

    $default  reduce using rule 54 (limit)


State 154

   53 limit: "+ or -" "iconst" •

    $default  reduce using rule 53 (limit)


State 155

   47 type_def: "(" identifiers • ")"
   68 identifiers: identifiers • "," "id"

    ")"  shift, and go to state 205
    ","  shift, and go to state 112


State 156

   48 type_def: limit ".." • limit

    "id"      shift, and go to state 103
    "iconst"  shift, and go to state 104
    "bconst"  shift, and go to state 105
    "cconst"  shift, and go to state 106
    "+ or -"  shift, and go to state 107

    limit  go to state 206


State 157

   42 type_defs: type_defs ";" "id" "=" • type_def

    "array"   shift, and go to state 100
    "set"     shift, and go to state 101
    "record"  shift, and go to state 102
    "id"      shift, and go to state 103
    "iconst"  shift, and go to state 104
    "bconst"  shift, and go to state 105
    "cconst"  shift, and go to state 106
    "+ or -"  shift, and go to state 107
    "("       shift, and go to state 108

    type_def  go to state 207
    limit     go to state 110


State 158

   68 identifiers: identifiers "," "id" •

    $default  reduce using rule 68 (identifiers)


State 159

   61 standard_type: "integer" •

    $default  reduce using rule 61 (standard_type)


State 160

   62 standard_type: "real" •

    $default  reduce using rule 62 (standard_type)


State 161

   63 standard_type: "boolean" •

    $default  reduce using rule 63 (standard_type)


State 162

   64 standard_type: "char" •

    $default  reduce using rule 64 (standard_type)


State 163

   60 typename: "id" •

    $default  reduce using rule 60 (typename)


State 164

   73 variable_defs: identifiers ":" typename •

    $default  reduce using rule 73 (variable_defs)


State 165

   59 typename: standard_type •

    $default  reduce using rule 59 (typename)


State 166

   68 identifiers: identifiers • "," "id"
   72 variable_defs: variable_defs ";" identifiers • ":" typename

    ","  shift, and go to state 112
    ":"  shift, and go to state 208


State 167

   21 expression: "id" "(" expressions ")" •

    $default  reduce using rule 21 (expression)


State 168

   28 expressions: expressions "," • expression

    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 209
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 169

   12 expression: expression • "> or >= or < or <= or <>" expression
   13           | expression • "=" expression
   14           | expression • "in" expression
   15           | expression • "or" expression
   16           | expression • "+ or -" expression
   17           | expression • "* or / or div or mod or and" expression
   38 elexpression: expression ".." expression •

    "> or >= or < or <= or <>"     shift, and go to state 67
    "+ or -"                       shift, and go to state 68
    "or"                           shift, and go to state 69
    "* or / or div or mod or and"  shift, and go to state 70
    "in"                           shift, and go to state 71
    "="                            shift, and go to state 72

    $default  reduce using rule 38 (elexpression)


State 170

   36 elexpressions: elexpressions "," elexpression •

    $default  reduce using rule 36 (elexpressions)


State 171

   27 variable: variable "[" expressions "]" •

    $default  reduce using rule 27 (variable)


State 172

   81 formal_parameters: "(" parameter_list ")" •

    $default  reduce using rule 81 (formal_parameters)


State 173

   83 parameter_list: parameter_list ";" • pass identifiers ":" typename

    "var"  shift, and go to state 130

    $default  reduce using rule 86 (pass)

    pass  go to state 210


State 174

   68 identifiers: identifiers • "," "id"
   84 parameter_list: pass identifiers • ":" typename

    ","  shift, and go to state 112
    ":"  shift, and go to state 211


State 175

   78 sub_header: "function" "id" formal_parameters ":" standard_type •

    $default  reduce using rule 78 (sub_header)


State 176

  104 assignment: error ":=" "string" •

    $default  reduce using rule 104 (assignment)


State 177

   12 expression: expression • "> or >= or < or <= or <>" expression
   13           | expression • "=" expression
   14           | expression • "in" expression
   15           | expression • "or" expression
   16           | expression • "+ or -" expression
   17           | expression • "* or / or div or mod or and" expression
  102 assignment: error ":=" expression •

    "> or >= or < or <= or <>"     shift, and go to state 67
    "+ or -"                       shift, and go to state 68
    "or"                           shift, and go to state 69
    "* or / or div or mod or and"  shift, and go to state 70
    "in"                           shift, and go to state 71
    "="                            shift, and go to state 72

    $default  reduce using rule 102 (assignment)


State 178

  108 if_statement: "if" expression "then" • $@3 statement if_tail

    $default  reduce using rule 107 ($@3)

    $@3  go to state 212


State 179

  112 while_statement: "while" expression "do" • $@4 statement

    $default  reduce using rule 111 ($@4)

    $@4  go to state 213


State 180

  114 for_statement: "for" "id" ":=" • iter_space "do" $@5 statement

    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 214
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46
    iter_space     go to state 215


State 181

  117 with_statement: "with" variable "do" • statement

    error    shift, and go to state 79
    "begin"  shift, and go to state 26
    "if"     shift, and go to state 80
    "while"  shift, and go to state 81
    "for"    shift, and go to state 82
    "with"   shift, and go to state 83
    "read"   shift, and go to state 84
    "write"  shift, and go to state 85
    "id"     shift, and go to state 86

    "end"   reduce using rule 99 (statement)
    "else"  reduce using rule 99 (statement)
    ";"     reduce using rule 99 (statement)

    variable         go to state 87
    comp_statement   go to state 88
    statement        go to state 216
    assignment       go to state 91
    if_statement     go to state 92
    while_statement  go to state 93
    for_statement    go to state 94
    with_statement   go to state 95
    subprogram_call  go to state 96
    io_statement     go to state 97


State 182

   26 variable: variable • "." "id"
   27         | variable • "[" expressions "]"
  124 read_item: variable •

    "."  shift, and go to state 73
    "["  shift, and go to state 74

    $default  reduce using rule 124 (read_item)


State 183

  120 io_statement: "read" "(" read_list • ")"
  122 read_list: read_list • "," read_item

    ")"  shift, and go to state 217
    ","  shift, and go to state 218


State 184

  123 read_list: read_item •

    $default  reduce using rule 123 (read_list)


State 185

  128 write_item: "string" •

    $default  reduce using rule 128 (write_item)


State 186

   12 expression: expression • "> or >= or < or <= or <>" expression
   13           | expression • "=" expression
   14           | expression • "in" expression
   15           | expression • "or" expression
   16           | expression • "+ or -" expression
   17           | expression • "* or / or div or mod or and" expression
  127 write_item: expression •

    "> or >= or < or <= or <>"     shift, and go to state 67
    "+ or -"                       shift, and go to state 68
    "or"                           shift, and go to state 69
    "* or / or div or mod or and"  shift, and go to state 70
    "in"                           shift, and go to state 71
    "="                            shift, and go to state 72

    $default  reduce using rule 127 (write_item)


State 187

  121 io_statement: "write" "(" write_list • ")"
  125 write_list: write_list • "," write_item

    ")"  shift, and go to state 219
    ","  shift, and go to state 220


State 188

  126 write_list: write_item •

    $default  reduce using rule 126 (write_list)


State 189

   28 expressions: expressions • "," expression
  119 subprogram_call: "id" "(" expressions • ")"

    ")"  shift, and go to state 221
    ","  shift, and go to state 168


State 190

  105 assignment: variable error "string" •

    $default  reduce using rule 105 (assignment)


State 191

   12 expression: expression • "> or >= or < or <= or <>" expression
   13           | expression • "=" expression
   14           | expression • "in" expression
   15           | expression • "or" expression
   16           | expression • "+ or -" expression
   17           | expression • "* or / or div or mod or and" expression
  103 assignment: variable error expression •

    "> or >= or < or <= or <>"     shift, and go to state 67
    "+ or -"                       shift, and go to state 68
    "or"                           shift, and go to state 69
    "* or / or div or mod or and"  shift, and go to state 70
    "in"                           shift, and go to state 71
    "="                            shift, and go to state 72

    $default  reduce using rule 103 (assignment)


State 192

  106 assignment: variable ":=" error •

    $default  reduce using rule 106 (assignment)


State 193

  101 assignment: variable ":=" "string" •

    $default  reduce using rule 101 (assignment)


State 194

   12 expression: expression • "> or >= or < or <= or <>" expression
   13           | expression • "=" expression
   14           | expression • "in" expression
   15           | expression • "or" expression
   16           | expression • "+ or -" expression
   17           | expression • "* or / or div or mod or and" expression
  100 assignment: variable ":=" expression •

    "> or >= or < or <= or <>"     shift, and go to state 67
    "+ or -"                       shift, and go to state 68
    "or"                           shift, and go to state 69
    "* or / or div or mod or and"  shift, and go to state 70
    "in"                           shift, and go to state 71
    "="                            shift, and go to state 72

    $default  reduce using rule 100 (assignment)


State 195

   89 statements: statements ";" statement •

    $default  reduce using rule 89 (statements)


State 196

   77 subprogram: sub_header ";" declarations subprograms comp_statement •

    $default  reduce using rule 77 (subprogram)


State 197

   52 limits: "id" •
   58 limit: "id" •

    ".."      reduce using rule 58 (limit)
    $default  reduce using rule 52 (limits)


State 198

   44 type_def: "array" "[" dims • "]" "of" typename
   49 dims: dims • "," limits

    ","  shift, and go to state 222
    "]"  shift, and go to state 223


State 199

   50 dims: limits •

    $default  reduce using rule 50 (dims)


State 200

   51 limits: limit • ".." limit

    ".."  shift, and go to state 224


State 201

   45 type_def: "set" "of" typename •

    $default  reduce using rule 45 (type_def)


State 202

   46 type_def: "record" fields "end" •

    $default  reduce using rule 46 (type_def)


State 203

   65 fields: fields ";" • field

    "id"  shift, and go to state 56

    field        go to state 225
    identifiers  go to state 152


State 204

   67 field: identifiers ":" • typename

    "integer"  shift, and go to state 159
    "real"     shift, and go to state 160
    "boolean"  shift, and go to state 161
    "char"     shift, and go to state 162
    "id"       shift, and go to state 163

    typename       go to state 226
    standard_type  go to state 165


State 205

   47 type_def: "(" identifiers ")" •

    $default  reduce using rule 47 (type_def)


State 206

   48 type_def: limit ".." limit •

    $default  reduce using rule 48 (type_def)


State 207

   42 type_defs: type_defs ";" "id" "=" type_def •

    $default  reduce using rule 42 (type_defs)


State 208

   72 variable_defs: variable_defs ";" identifiers ":" • typename

    "integer"  shift, and go to state 159
    "real"     shift, and go to state 160
    "boolean"  shift, and go to state 161
    "char"     shift, and go to state 162
    "id"       shift, and go to state 163

    typename       go to state 227
    standard_type  go to state 165


State 209

   12 expression: expression • "> or >= or < or <= or <>" expression
   13           | expression • "=" expression
   14           | expression • "in" expression
   15           | expression • "or" expression
   16           | expression • "+ or -" expression
   17           | expression • "* or / or div or mod or and" expression
   28 expressions: expressions "," expression •

    "> or >= or < or <= or <>"     shift, and go to state 67
    "+ or -"                       shift, and go to state 68
    "or"                           shift, and go to state 69
    "* or / or div or mod or and"  shift, and go to state 70
    "in"                           shift, and go to state 71
    "="                            shift, and go to state 72

    $default  reduce using rule 28 (expressions)


State 210

   83 parameter_list: parameter_list ";" pass • identifiers ":" typename

    "id"  shift, and go to state 56

    identifiers  go to state 228


State 211

   84 parameter_list: pass identifiers ":" • typename

    "integer"  shift, and go to state 159
    "real"     shift, and go to state 160
    "boolean"  shift, and go to state 161
    "char"     shift, and go to state 162
    "id"       shift, and go to state 163

    typename       go to state 229
    standard_type  go to state 165


State 212

  108 if_statement: "if" expression "then" $@3 • statement if_tail

    error    shift, and go to state 79
    "begin"  shift, and go to state 26
    "if"     shift, and go to state 80
    "while"  shift, and go to state 81
    "for"    shift, and go to state 82
    "with"   shift, and go to state 83
    "read"   shift, and go to state 84
    "write"  shift, and go to state 85
    "id"     shift, and go to state 86

    "end"   reduce using rule 99 (statement)
    "else"  reduce using rule 99 (statement)
    ";"     reduce using rule 99 (statement)

    variable         go to state 87
    comp_statement   go to state 88
    statement        go to state 230
    assignment       go to state 91
    if_statement     go to state 92
    while_statement  go to state 93
    for_statement    go to state 94
    with_statement   go to state 95
    subprogram_call  go to state 96
    io_statement     go to state 97


State 213

  112 while_statement: "while" expression "do" $@4 • statement

    error    shift, and go to state 79
    "begin"  shift, and go to state 26
    "if"     shift, and go to state 80
    "while"  shift, and go to state 81
    "for"    shift, and go to state 82
    "with"   shift, and go to state 83
    "read"   shift, and go to state 84
    "write"  shift, and go to state 85
    "id"     shift, and go to state 86

    "end"   reduce using rule 99 (statement)
    "else"  reduce using rule 99 (statement)
    ";"     reduce using rule 99 (statement)

    variable         go to state 87
    comp_statement   go to state 88
    statement        go to state 231
    assignment       go to state 91
    if_statement     go to state 92
    while_statement  go to state 93
    for_statement    go to state 94
    with_statement   go to state 95
    subprogram_call  go to state 96
    io_statement     go to state 97


State 214

   12 expression: expression • "> or >= or < or <= or <>" expression
   13           | expression • "=" expression
   14           | expression • "in" expression
   15           | expression • "or" expression
   16           | expression • "+ or -" expression
   17           | expression • "* or / or div or mod or and" expression
  115 iter_space: expression • "to" expression
  116           | expression • "downto" expression

    "downto"                       shift, and go to state 232
    "to"                           shift, and go to state 233
    "> or >= or < or <= or <>"     shift, and go to state 67
    "+ or -"                       shift, and go to state 68
    "or"                           shift, and go to state 69
    "* or / or div or mod or and"  shift, and go to state 70
    "in"                           shift, and go to state 71
    "="                            shift, and go to state 72


State 215

  114 for_statement: "for" "id" ":=" iter_space • "do" $@5 statement

    "do"  shift, and go to state 234


State 216

  117 with_statement: "with" variable "do" statement •

    $default  reduce using rule 117 (with_statement)


State 217

  120 io_statement: "read" "(" read_list ")" •

    $default  reduce using rule 120 (io_statement)


State 218

  122 read_list: read_list "," • read_item

    "id"  shift, and go to state 138

    variable   go to state 182
    read_item  go to state 235


State 219

  121 io_statement: "write" "(" write_list ")" •

    $default  reduce using rule 121 (io_statement)


State 220

  125 write_list: write_list "," • write_item

    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "string"  shift, and go to state 185
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 186
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46
    write_item     go to state 236


State 221

  119 subprogram_call: "id" "(" expressions ")" •

    $default  reduce using rule 119 (subprogram_call)


State 222

   49 dims: dims "," • limits

    "id"      shift, and go to state 197
    "iconst"  shift, and go to state 104
    "bconst"  shift, and go to state 105
    "cconst"  shift, and go to state 106
    "+ or -"  shift, and go to state 107

    limits  go to state 237
    limit   go to state 200


State 223

   44 type_def: "array" "[" dims "]" • "of" typename

    "of"  shift, and go to state 238


State 224

   51 limits: limit ".." • limit

    "id"      shift, and go to state 103
    "iconst"  shift, and go to state 104
    "bconst"  shift, and go to state 105
    "cconst"  shift, and go to state 106
    "+ or -"  shift, and go to state 107

    limit  go to state 239


State 225

   65 fields: fields ";" field •

    $default  reduce using rule 65 (fields)


State 226

   67 field: identifiers ":" typename •

    $default  reduce using rule 67 (field)


State 227

   72 variable_defs: variable_defs ";" identifiers ":" typename •

    $default  reduce using rule 72 (variable_defs)


State 228

   68 identifiers: identifiers • "," "id"
   83 parameter_list: parameter_list ";" pass identifiers • ":" typename

    ","  shift, and go to state 112
    ":"  shift, and go to state 240


State 229

   84 parameter_list: pass identifiers ":" typename •

    $default  reduce using rule 84 (parameter_list)


State 230

  108 if_statement: "if" expression "then" $@3 statement • if_tail

    "else"  shift, and go to state 241

    $default  reduce using rule 110 (if_tail)

    if_tail  go to state 242


State 231

  112 while_statement: "while" expression "do" $@4 statement •

    $default  reduce using rule 112 (while_statement)


State 232

  116 iter_space: expression "downto" • expression

    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 243
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 233

  115 iter_space: expression "to" • expression

    "id"      shift, and go to state 34
    "iconst"  shift, and go to state 35
    "rconst"  shift, and go to state 36
    "bconst"  shift, and go to state 37
    "cconst"  shift, and go to state 38
    "+ or -"  shift, and go to state 39
    "not"     shift, and go to state 40
    "("       shift, and go to state 41
    "["       shift, and go to state 42

    expression     go to state 244
    variable       go to state 44
    constant       go to state 45
    setexpression  go to state 46


State 234

  114 for_statement: "for" "id" ":=" iter_space "do" • $@5 statement

    $default  reduce using rule 113 ($@5)

    $@5  go to state 245


State 235

  122 read_list: read_list "," read_item •

    $default  reduce using rule 122 (read_list)


State 236

  125 write_list: write_list "," write_item •

    $default  reduce using rule 125 (write_list)


State 237

   49 dims: dims "," limits •

    $default  reduce using rule 49 (dims)


State 238

   44 type_def: "array" "[" dims "]" "of" • typename

    "integer"  shift, and go to state 159
    "real"     shift, and go to state 160
    "boolean"  shift, and go to state 161
    "char"     shift, and go to state 162
    "id"       shift, and go to state 163

    typename       go to state 246
    standard_type  go to state 165


State 239

   51 limits: limit ".." limit •

    $default  reduce using rule 51 (limits)


State 240

   83 parameter_list: parameter_list ";" pass identifiers ":" • typename

    "integer"  shift, and go to state 159
    "real"     shift, and go to state 160
    "boolean"  shift, and go to state 161
    "char"     shift, and go to state 162
    "id"       shift, and go to state 163

    typename       go to state 247
    standard_type  go to state 165


State 241

  109 if_tail: "else" • statement

    error    shift, and go to state 79
    "begin"  shift, and go to state 26
    "if"     shift, and go to state 80
    "while"  shift, and go to state 81
    "for"    shift, and go to state 82
    "with"   shift, and go to state 83
    "read"   shift, and go to state 84
    "write"  shift, and go to state 85
    "id"     shift, and go to state 86

    "end"   reduce using rule 99 (statement)
    "else"  reduce using rule 99 (statement)
    ";"     reduce using rule 99 (statement)

    variable         go to state 87
    comp_statement   go to state 88
    statement        go to state 248
    assignment       go to state 91
    if_statement     go to state 92
    while_statement  go to state 93
    for_statement    go to state 94
    with_statement   go to state 95
    subprogram_call  go to state 96
    io_statement     go to state 97


State 242

  108 if_statement: "if" expression "then" $@3 statement if_tail •

    $default  reduce using rule 108 (if_statement)


State 243

   12 expression: expression • "> or >= or < or <= or <>" expression
   13           | expression • "=" expression
   14           | expression • "in" expression
   15           | expression • "or" expression
   16           | expression • "+ or -" expression
   17           | expression • "* or / or div or mod or and" expression
  116 iter_space: expression "downto" expression •

    "> or >= or < or <= or <>"     shift, and go to state 67
    "+ or -"                       shift, and go to state 68
    "or"                           shift, and go to state 69
    "* or / or div or mod or and"  shift, and go to state 70
    "in"                           shift, and go to state 71
    "="                            shift, and go to state 72

    $default  reduce using rule 116 (iter_space)


State 244

   12 expression: expression • "> or >= or < or <= or <>" expression
   13           | expression • "=" expression
   14           | expression • "in" expression
   15           | expression • "or" expression
   16           | expression • "+ or -" expression
   17           | expression • "* or / or div or mod or and" expression
  115 iter_space: expression "to" expression •

    "> or >= or < or <= or <>"     shift, and go to state 67
    "+ or -"                       shift, and go to state 68
    "or"                           shift, and go to state 69
    "* or / or div or mod or and"  shift, and go to state 70
    "in"                           shift, and go to state 71
    "="                            shift, and go to state 72

    $default  reduce using rule 115 (iter_space)


State 245

  114 for_statement: "for" "id" ":=" iter_space "do" $@5 • statement

    error    shift, and go to state 79
    "begin"  shift, and go to state 26
    "if"     shift, and go to state 80
    "while"  shift, and go to state 81
    "for"    shift, and go to state 82
    "with"   shift, and go to state 83
    "read"   shift, and go to state 84
    "write"  shift, and go to state 85
    "id"     shift, and go to state 86

    "end"   reduce using rule 99 (statement)
    "else"  reduce using rule 99 (statement)
    ";"     reduce using rule 99 (statement)

    variable         go to state 87
    comp_statement   go to state 88
    statement        go to state 249
    assignment       go to state 91
    if_statement     go to state 92
    while_statement  go to state 93
    for_statement    go to state 94
    with_statement   go to state 95
    subprogram_call  go to state 96
    io_statement     go to state 97


State 246

   44 type_def: "array" "[" dims "]" "of" typename •

    $default  reduce using rule 44 (type_def)


State 247

   83 parameter_list: parameter_list ";" pass identifiers ":" typename •

    $default  reduce using rule 83 (parameter_list)


State 248

  109 if_tail: "else" statement •

    $default  reduce using rule 109 (if_tail)


State 249

  114 for_statement: "for" "id" ":=" iter_space "do" $@5 statement •

    $default  reduce using rule 114 (for_statement)
